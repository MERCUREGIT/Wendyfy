{"version":3,"sources":["pages/other/Wishlist.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","deleteFromWishlist","deleteAllFromWishlist","multilanguage","location","strings","useToasts","pathname","name","content","to","process","headerTop","className","length","map","wishlistItem","key","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","cartItem","filter","_id","src","routes","server","image","alt","currencySymbol","affiliateLink","href","rel","target","variation","stock","onClick","undefined","quantity","disabled","title","Breadcrumb","separator","NavLink","finalItem"],"mappings":"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","file":"static/js/41.e1f08673.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport {routes} from \"../../config/routes\"\r\nimport {multilanguage} from \"redux-multilanguage\";\r\n\r\nconst Wishlist = ({\r\n  location,\r\n  cartItems,\r\n  currency,\r\n  addToCart,\r\n  wishlistItems,\r\n  deleteFromWishlist,\r\n  deleteAllFromWishlist,\r\n    strings\r\n}) => {\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Wendyfy | Wishlist</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Wishlist page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>{strings['home']}</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        {strings['wishlist']}\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"cart-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {wishlistItems && wishlistItems.length >= 1 ? (\r\n              <Fragment>\r\n                <h3 className=\"cart-page-title\">{strings['your_wishlist_items']}</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"table-content table-responsive cart-table-content\">\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{strings['image']}</th>\r\n                            <th>{strings['product_name']}</th>\r\n                            <th>{strings['unit_price']}</th>\r\n                            <th>{strings['add_to_cart']}</th>\r\n                            <th>{strings['action']}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {wishlistItems.map((wishlistItem, key) => {\r\n                            const discountedPrice = getDiscountPrice(\r\n                              wishlistItem.price,\r\n                              wishlistItem.discount\r\n                            );\r\n                            const finalProductPrice = (\r\n                              wishlistItem.price * currency.currencyRate\r\n                            ).toFixed(2);\r\n                            const finalDiscountedPrice = (\r\n                              discountedPrice * currency.currencyRate\r\n                            ).toFixed(2);\r\n                            const cartItem = cartItems.filter(\r\n                              item => item._id === wishlistItem._id\r\n                            )[0];\r\n                            return (\r\n                              <tr key={key}>\r\n                                <td className=\"product-thumbnail\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      wishlistItem._id\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      className=\"img-fluid\"\r\n                                      src={\r\n                                        routes.server +\"/\"+\r\n                                        wishlistItem.image[0]\r\n                                      }\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-name text-center\">\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      wishlistItem._id\r\n                                    }\r\n                                  >\r\n                                    {wishlistItem.name}\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className=\"product-price-cart\">\r\n                                  {discountedPrice !== null ? (\r\n                                    <Fragment>\r\n                                      <span className=\"amount old\">\r\n                                        {currency.currencySymbol +\r\n                                          finalProductPrice}\r\n                                      </span>\r\n                                      <span className=\"amount\">\r\n                                        {currency.currencySymbol +\r\n                                          finalDiscountedPrice}\r\n                                      </span>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <span className=\"amount\">\r\n                                      {currency.currencySymbol +\r\n                                        finalProductPrice}\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className=\"product-wishlist-cart\">\r\n                                  {wishlistItem.affiliateLink ? (\r\n                                    <a\r\n                                      href={wishlistItem.affiliateLink}\r\n                                      rel=\"noopener noreferrer\"\r\n                                      target=\"_blank\"\r\n                                    >\r\n                                      {\" \"}\r\n                                      Buy now{\" \"}\r\n                                    </a>\r\n                                  ) : wishlistItem.variation &&\r\n                                    wishlistItem.variation.length >= 1 ? (\r\n                                    <Link\r\n                                      to={`${process.env.PUBLIC_URL}/product/${wishlistItem._id}`}\r\n                                    >\r\n                                      {strings['select_option']}\r\n                                    </Link>\r\n                                  ) : wishlistItem.stock &&\r\n                                    wishlistItem.stock > 0 ? (\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        addToCart(wishlistItem, addToast)\r\n                                      }\r\n                                      className={\r\n                                        cartItem !== undefined &&\r\n                                        cartItem.quantity > 0\r\n                                          ? \"active\"\r\n                                          : \"\"\r\n                                      }\r\n                                      disabled={\r\n                                        cartItem !== undefined &&\r\n                                        cartItem.quantity > 0\r\n                                      }\r\n                                      title={\r\n                                        wishlistItem !== undefined\r\n                                          ? strings['added_to_cart']\r\n                                          : strings['add_to_cart']\r\n                                      }\r\n                                    >\r\n                                      {cartItem !== undefined &&\r\n                                      cartItem.quantity > 0\r\n                                        ? strings['added']\r\n                                        : strings['add_to_cart']}\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button disabled className=\"active\">\r\n                                      {strings['out_of_stock']}\r\n                                    </button>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className=\"product-remove\">\r\n                                  <button\r\n                                    onClick={() =>\r\n                                      deleteFromWishlist(wishlistItem, addToast)\r\n                                    }\r\n                                  >\r\n                                    <i className=\"fa fa-times\"></i>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"cart-shiping-update-wrapper\">\r\n                      <div className=\"cart-shiping-update\">\r\n                        <Link\r\n                          to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}\r\n                        >\r\n                          {strings['continue_shopping']}\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"cart-clear\">\r\n                        <button onClick={() => deleteAllFromWishlist(addToast)}>\r\n                          {strings['clear_wishlist']}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-like\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      {strings['no_items_found_to_wishlist']} <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\r\n                        {strings['add_items']}\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nWishlist.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteAllFromWishlist: PropTypes.func,\r\n  deleteFromWishlist: PropTypes.func,\r\n  wishlistItems: PropTypes.array,\r\n  strings:PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    currency: state.currencyData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    addToWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(addToWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteFromWishlist: (item, addToast, quantityCount) => {\r\n      dispatch(deleteFromWishlist(item, addToast, quantityCount));\r\n    },\r\n    deleteAllFromWishlist: addToast => {\r\n      dispatch(deleteAllFromWishlist(addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Wishlist));\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}