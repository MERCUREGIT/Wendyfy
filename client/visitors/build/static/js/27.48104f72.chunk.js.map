{"version":3,"sources":["pages/shop/ShopGridFilter.js","components/product/sub-components/ProductRating.js","wrappers/breadcrumb/Breadcrumb.js","components/product/ProductModal.js","components/product/ProductGridListSingle.js","wrappers/product/ProductgridList.js","wrappers/product/ShopProducts.js","components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js"],"names":["connect","state","products","productData","location","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","name","content","to","process","headerTop","className","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","ProductRating","ratingValue","rating","i","push","key","Breadcrumb","separator","item","NavLink","finalItem","cartitems","cartData","multilanguage","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","strings","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","variation","color","selectedProductColor","setSelectedProductColor","size","selectedProductSize","setSelectedProductSize","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","cartItems","productCartQty","getProductCartQuantity","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","show","onHide","Header","closeButton","image","map","single","src","alt","currencySymbol","shortDescription","type","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ProductGridListSingle","cartItem","sliderClassName","spaceBottomClass","modalShow","setModalShow","useToasts","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","_id","new","quantity","id","ProductModal","cartitem","currencyData","wishlistItems","wishlistData","compareItems","compareData","dispatch","filter","ShopProducts","ProductgridList","ShopTopFilter","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","category","e","setActiveSort","tag","ShopTopActionFilter","toggleShopTopFilter","ShopTopbar"],"mappings":"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","file":"static/js/27.48104f72.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport Paginator from 'react-hooks-paginator';\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { connect } from 'react-redux';\nimport { getSortedProducts } from '../../helpers/product';\nimport LayoutOne from '../../layouts/LayoutOne';\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\nimport ShopTopbarFilter from '../../wrappers/product/ShopTopbarFilter';\nimport ShopProducts from '../../wrappers/product/ShopProducts';\n\nconst ShopGridFilter = ({location, products}) => {\n    const [layout, setLayout] = useState('grid three-column');\n    const [sortType, setSortType] = useState('');\n    const [sortValue, setSortValue] = useState('');\n    const [filterSortType, setFilterSortType] = useState('');\n    const [filterSortValue, setFilterSortValue] = useState('');\n    const [offset, setOffset] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentData, setCurrentData] = useState([]);\n    const [sortedProducts, setSortedProducts] = useState([]);\n\n    const pageLimit = 15;\n    const {pathname} = location;\n\n    const getLayout = (layout) => {\n        setLayout(layout)\n    }\n\n    const getSortParams = (sortType, sortValue) => {\n        setSortType(sortType);\n        setSortValue(sortValue);\n    }\n\n    const getFilterSortParams = (sortType, sortValue) => {\n        setFilterSortType(sortType);\n        setFilterSortValue(sortValue);\n    }\n\n    useEffect(() => {\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\n        sortedProducts = filterSortedProducts;\n        setSortedProducts(sortedProducts);\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\n\n    return (\n        <Fragment>\n            <MetaTags>\n                <title>Flone | Shop Page</title>\n                <meta name=\"description\" content=\"Shop page of flone react minimalist eCommerce template.\" />\n            </MetaTags>\n\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem>\n\n            <LayoutOne headerTop=\"visible\">\n                {/* breadcrumb */}\n                <Breadcrumb />\n\n                <div className=\"shop-area pt-95 pb-100\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                {/* shop topbar filter */}\n                                <ShopTopbarFilter getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} products={products} getSortParams={getSortParams}/>\n\n                                {/* shop page content default */}\n                                <ShopProducts layout={layout} products={currentData} />\n\n                                {/* shop product pagination */}\n                                <div className=\"pro-pagination-style text-center mt-30\">\n                                    <Paginator\n                                        totalRecords={sortedProducts.length}\n                                        pageLimit={pageLimit}\n                                        pageNeighbours={2}\n                                        setOffset={setOffset}\n                                        currentPage={currentPage}\n                                        setCurrentPage={setCurrentPage}\n                                        pageContainerClass=\"mb-0 mt-0\"\n                                        pagePrevText=\"«\"\n                                        pageNextText=\"»\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </LayoutOne>\n        </Fragment>\n    )\n}\n\nShopGridFilter.propTypes = {\n  location: PropTypes.object,\n  products: PropTypes.array\n}\n\nconst mapStateToProps = state => {\n    return{\n        products: state.productData.products\n    }\n}\n\nexport default connect(mapStateToProps)(ShopGridFilter);","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\n\nconst ProductRating = ({ ratingValue }) => {\n  let rating = [];\n\n  for (let i = 0; i < 5; i++) {\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\n  }\n  if (ratingValue && ratingValue > 0) {\n    for (let i = 0; i <= ratingValue - 1; i++) {\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\n    }\n  }\n  return <Fragment>{rating}</Fragment>;\n};\n\nProductRating.propTypes = {\n  ratingValue: PropTypes.number\n};\n\nexport default ProductRating;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { getProductCartQuantity } from \"../../helpers/product\";\nimport { Modal } from \"react-bootstrap\";\nimport Rating from \"./sub-components/ProductRating\";\nimport { connect } from \"react-redux\";\n// import {routes} from \"../../config/routes\"\nimport {multilanguage} from \"redux-multilanguage\";\nfunction ProductModal(props) {\n  const { product } = props;\n  const { currency } = props;\n  const { discountedprice } = props;\n  const { finalproductprice } = props;\n  const { finaldiscountedprice } = props;\n  const { strings } = props;\n\n  const [gallerySwiper, getGallerySwiper] = useState(null);\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\n  const [selectedProductColor, setSelectedProductColor] = useState(\n    product.variation && product.variation.length > 0 ? product.variation[0].color : \"\"\n  );\n  const [selectedProductSize, setSelectedProductSize] = useState(\n    product.variation && product.variation.length > 0 ? product.variation[0].size[0].name : \"\"\n  );\n  const [productStock, setProductStock] = useState(\n    product.variation && product.variation.length > 0 ? product.variation[0].size[0].stock : product.stock\n  );\n  const [quantityCount, setQuantityCount] = useState(1);\n\n  const wishlistItem = props.wishlistitem;\n  const compareItem = props.compareitem;\n\n  const addToCart = props.addtocart;\n  const addToWishlist = props.addtowishlist;\n  const addToCompare = props.addtocompare;\n\n  const addToast = props.addtoast;\n  const cartItems = props.cartitems;\n\n  const productCartQty = getProductCartQuantity(\n    cartItems,\n    product,\n    selectedProductColor,\n    selectedProductSize\n  );\n\n  useEffect(() => {\n    if (\n      gallerySwiper !== null &&\n      gallerySwiper.controller &&\n      thumbnailSwiper !== null &&\n      thumbnailSwiper.controller\n    ) {\n      gallerySwiper.controller.control = thumbnailSwiper;\n      thumbnailSwiper.controller.control = gallerySwiper;\n    }\n  }, [gallerySwiper, thumbnailSwiper]);\n\n  const gallerySwiperParams = {\n    getSwiper: getGallerySwiper,\n    spaceBetween: 10,\n    loopedSlides: 4,\n    loop: true\n  };\n\n  const thumbnailSwiperParams = {\n    getSwiper: getThumbnailSwiper,\n    spaceBetween: 10,\n    slidesPerView: 4,\n    loopedSlides: 4,\n    touchRatio: 0.2,\n    freeMode: true,\n    loop: true,\n    slideToClickedSlide: true,\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\"\n    },\n    renderPrevButton: () => (\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-left\" />\n      </button>\n    ),\n    renderNextButton: () => (\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-right\" />\n      </button>\n    )\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        show={props.show}\n        onHide={props.onHide}\n        className=\"product-quickview-modal-wrapper\"\n      >\n        <Modal.Header closeButton></Modal.Header>\n\n        <div className=\"modal-body\">\n          <div className=\"row\">\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\n              <div className=\"product-large-image-wrapper\">\n                <Swiper {...gallerySwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={  single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n              <div className=\"product-small-image-wrapper mt-15\">\n                <Swiper {...thumbnailSwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={  single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n            </div>\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\n              <div className=\"product-details-content quickview-content\">\n                <h2>{product.name}</h2>\n                <div className=\"product-details-price\">\n                  {discountedprice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finaldiscountedprice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalproductprice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalproductprice} </span>\n                  )}\n                </div>\n                {product.rating && product.rating > 0 ? (\n                  <div className=\"pro-details-rating-wrap\">\n                    <div className=\"pro-details-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"pro-details-list\">\n                  <p>{product.shortDescription}</p>\n                </div>\n\n                {product.variation && product.variation.length > 0 ? (\n                  <div className=\"pro-details-size-color\">\n                    <div className=\"pro-details-color-wrap\">\n                      <span>{strings['color']}</span>\n                      <div className=\"pro-details-color-content\">\n                        {product.variation.map((single, key) => {\n                          return (\n                            <label\n                              className={`pro-details-color-content--single ${single.color}`}\n                              key={key} >\n                              <input\n                                type=\"radio\"\n                                value={single.color}\n                                name=\"product-color\"\n                                checked={\n                                  single.color === selectedProductColor\n                                    ? \"checked\"\n                                    : \"\"\n                                }\n                                onChange={() => {\n                                  setSelectedProductColor(single.color);\n                                  setSelectedProductSize(single.size[0].name);\n                                  setProductStock(single.size[0].stock);\n                                  setQuantityCount(1);\n                                }}\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    <div className=\"pro-details-size\">\n                      <span>{strings['size']}</span>\n                      <div className=\"pro-details-size-content\">\n                        {product.variation &&\n                          product.variation.map(single => {\n                            return single.color === selectedProductColor\n                              ? single.size.map((singleSize, key) => {\n                                  return (\n                                    <label\n                                      className={`pro-details-size-content--single`}\n                                      key={key}\n                                    >\n                                      <input\n                                        type=\"radio\"\n                                        value={singleSize.name}\n                                        checked={\n                                          singleSize.name ===\n                                          selectedProductSize\n                                            ? \"checked\"\n                                            : \"\"\n                                        }\n                                        onChange={() => {\n                                          setSelectedProductSize(\n                                            singleSize.name\n                                          );\n                                          setProductStock(singleSize.stock);\n                                          setQuantityCount(1);\n                                        }}\n                                      />\n                                      <span className=\"size-name\">\n                                        {singleSize.name}\n                                      </span>\n                                    </label>\n                                  );\n                                })\n                              : \"\";\n                          })}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {product.affiliateLink ? (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"pro-details-cart btn-hover\">\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        Buy Now\n                      </a>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"cart-plus-minus\">\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount > 1 ? quantityCount - 1 : 1\n                          )\n                        }\n                        className=\"dec qtybutton\"\n                      >\n                        -\n                      </button>\n                      <input\n                        className=\"cart-plus-minus-box\"\n                        type=\"text\"\n                        value={quantityCount}\n                        readOnly\n                      />\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount < productStock - productCartQty\n                              ? quantityCount + 1\n                              : quantityCount\n                          )\n                        }\n                        className=\"inc qtybutton\"\n                      >\n                        +\n                      </button>\n                    </div>\n                    <div className=\"pro-details-cart btn-hover\">\n                      {productStock && productStock > 0 ? (\n                        <button\n                          onClick={() =>\n                            addToCart(\n                              product,\n                              addToast,\n                              quantityCount,\n                              selectedProductColor,\n                              selectedProductSize\n                            )\n                          }\n                          disabled={productCartQty >= productStock}\n                        >\n                          {\" \"}\n                          {strings['add_to_cart']}{\" \"}\n                        </button>\n                      ) : (\n                        <button disabled>{strings['out_of_stock']}</button>\n                      )}\n                    </div>\n                    <div className=\"pro-details-wishlist\">\n                      <button\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\n                        disabled={wishlistItem !== undefined}\n                        title={\n                          wishlistItem !== undefined\n                              ? strings['added_to_wishlist']\n                              : strings['add_to_wishlist']\n                        }\n                        onClick={() => addToWishlist(product, addToast)}\n                      >\n                        <i className=\"pe-7s-like\" />\n                      </button>\n                    </div>\n                    <div className=\"pro-details-compare\">\n                      <button\n                        className={compareItem !== undefined ? \"active\" : \"\"}\n                        disabled={compareItem !== undefined}\n                        title={\n                          compareItem !== undefined\n                            ? strings['added_to_compare']\n                            : strings['add_to_compare']\n                        }\n                        onClick={() => addToCompare(product, addToast)}\n                      >\n                        <i className=\"pe-7s-shuffle\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Fragment>\n  );\n}\n\nProductModal.propTypes = {\n  addtoast: PropTypes.func,\n  addtocart: PropTypes.func,\n  addtocompare: PropTypes.func,\n  addtowishlist: PropTypes.func,\n  cartitems: PropTypes.array,\n  compareitem: PropTypes.object,\n  currency: PropTypes.object,\n  discountedprice: PropTypes.number,\n  finaldiscountedprice: PropTypes.number,\n  finalproductprice: PropTypes.number,\n  onHide: PropTypes.func,\n  product: PropTypes.object,\n  show: PropTypes.bool,\n  wishlistitem: PropTypes.object,\n  strings:PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartitems: state.cartData\n  };\n};\n\nexport default connect(mapStateToProps)(multilanguage(ProductModal));\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport Rating from \"./sub-components/ProductRating\";\nimport ProductModal from \"./ProductModal\";\n// import {routes} from \"../../config/routes\"\nconst ProductGridListSingle = ({\n  product,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItem,\n  wishlistItem,\n  compareItem,\n  sliderClassName,\n  spaceBottomClass\n}) => {\n  const [modalShow, setModalShow] = useState(false);\n  const { addToast } = useToasts();\n\n  const discountedPrice = getDiscountPrice(product.price, product.discount);\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\n  const finalDiscountedPrice = +(\n    discountedPrice * currency.currencyRate\n  ).toFixed(2);\n\n  return (\n    <Fragment>\n      <div\n        className={`col-xl-4 col-sm-6 ${\n          sliderClassName ? sliderClassName : \"\"\n        }`}\n      >\n        <div\n          className={`product-wrap ${spaceBottomClass ? spaceBottomClass : \"\"}`}\n        >\n          <div className=\"product-img\">\n            <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\n              <img\n                className=\"default-img\"\n                src={product.image[0]}\n                alt=\"\"\n              />\n              {product.image.length > 1 ? (\n                <img\n                  className=\"hover-img\"\n                  src={product.image[1]}\n                  alt=\"\"\n                />\n              ) : (\n                \"\"\n              )}\n            </Link>\n            {product.discount || product.new ? (\n              <div className=\"product-img-badges\">\n                {product.discount ? (\n                  <span className=\"pink\">-{product.discount}%</span>\n                ) : (\n                  \"\"\n                )}\n                {product.new ? <span className=\"purple\">New</span> : \"\"}\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"product-action\">\n              <div className=\"pro-same-action pro-wishlist\">\n                <button\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\n                  disabled={wishlistItem !== undefined}\n                  title={\n                    wishlistItem !== undefined\n                      ? \"Added to wishlist\"\n                      : \"Add to wishlist\"\n                  }\n                  onClick={() => addToWishlist(product, addToast)}\n                >\n                  <i className=\"pe-7s-like\" />\n                </button>\n              </div>\n              <div className=\"pro-same-action pro-cart\">\n                {product.affiliateLink ? (\n                  <a\n                    href={product.affiliateLink}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {\" \"}\n                    Buy now{\" \"}\n                  </a>\n                ) : product.variation && product.variation.length >= 1 ? (\n                  <Link to={`${process.env.PUBLIC_URL}/product/${product._id}`}>\n                    Voir Plus\n                  </Link>\n                ) : product.stock && product.stock > 0 ? (\n                  <button\n                    onClick={() => addToCart(product, addToast)}\n                    className={\n                      cartItem !== undefined && cartItem.quantity > 0\n                        ? \"active\"\n                        : \"\"\n                    }\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\n                    title={\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\n                    }\n                  >\n                    {\" \"}\n                    <i className=\"pe-7s-cart\"></i>{\" \"}\n                    {cartItem !== undefined && cartItem.quantity > 0\n                      ? \"Added\"\n                      : \"Add to cart\"}\n                  </button>\n                ) : (\n                  <button disabled className=\"active\">\n                    Out of Stock\n                  </button>\n                )}\n              </div>\n              <div className=\"pro-same-action pro-quickview\">\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\n                  <i className=\"pe-7s-look\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"product-content text-center\">\n            <h3>\n              <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}>\n                {product.name}\n              </Link>\n            </h3>\n            {product.rating && product.rating > 0 ? (\n              <div className=\"product-rating\">\n                <Rating ratingValue={product.rating} />\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"product-price\">\n              {discountedPrice !== null ? (\n                <Fragment>\n                  <span>{currency.currencySymbol + finalDiscountedPrice}</span>{\" \"}\n                  <span className=\"old\">\n                    {currency.currencySymbol + finalProductPrice}\n                  </span>\n                </Fragment>\n              ) : (\n                <span>{currency.currencySymbol + finalProductPrice} </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"shop-list-wrap mb-30\">\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-md-5 col-sm-6\">\n              <div className=\"product-list-image-wrap\">\n                <div className=\"product-img\">\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\n                    <img\n                      className=\"default-img img-fluid\"\n                      src={ product.image[0]}\n                      alt=\"\"\n                    />\n                    {product.image.length > 1 ? (\n                      <img\n                        className=\"hover-img img-fluid\"\n                        src={product.image[1]}\n                        alt=\"\"\n                      />\n                    ) : (\n                      \"\"\n                    )}\n                  </Link>\n                  {product.discount || product.new ? (\n                    <div className=\"product-img-badges\">\n                      {product.discount ? (\n                        <span className=\"pink\">-{product.discount}%</span>\n                      ) : (\n                        \"\"\n                      )}\n                      {product.new ? <span className=\"purple\">New</span> : \"\"}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-8 col-md-7 col-sm-6\">\n              <div className=\"shop-list-content\">\n                <h3>\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\n                    {product.name}\n                  </Link>\n                </h3>\n                <div className=\"product-list-price\">\n                  {discountedPrice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finalDiscountedPrice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalProductPrice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalProductPrice} </span>\n                  )}\n                </div>\n                {product.rating && product.rating > 0 ? (\n                  <div className=\"rating-review\">\n                    <div className=\"product-list-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {product.shortDescription ? (\n                  <p>{product.shortDescription}</p>\n                ) : (\n                  \"\"\n                )}\n\n                <div className=\"shop-list-actions d-flex align-items-center\">\n                  <div className=\"shop-list-btn btn-hover\">\n                    {product.affiliateLink ? (\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        Buy now{\" \"}\n                      </a>\n                    ) : product.variation && product.variation.length >= 1 ? (\n                      <Link\n                        to={`${process.env.PUBLIC_URL}/product/${product._id}`}\n                      >\n                        Select Option\n                      </Link>\n                    ) : product.stock && product.stock > 0 ? (\n                      <button\n                        onClick={() => addToCart(product, addToast)}\n                        className={\n                          cartItem !== undefined && cartItem.quantity > 0\n                            ? \"active\"\n                            : \"\"\n                        }\n                        disabled={\n                          cartItem !== undefined && cartItem.quantity > 0\n                        }\n                        title={\n                          cartItem !== undefined\n                            ? \"Added to cart\"\n                            : \"Add to cart\"\n                        }\n                      >\n                        {\" \"}\n                        <i className=\"pe-7s-cart\"></i>{\" \"}\n                        {cartItem !== undefined && cartItem.quantity > 0\n                          ? \"Added\"\n                          : \"Add to cart\"}\n                      </button>\n                    ) : (\n                      <button disabled className=\"active\">\n                        Out of Stock\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"shop-list-wishlist ml-10\">\n                    <button\n                      className={wishlistItem !== undefined ? \"active\" : \"\"}\n                      disabled={wishlistItem !== undefined}\n                      title={\n                        wishlistItem !== undefined\n                          ? \"Added to wishlist\"\n                          : \"Add to wishlist\"\n                      }\n                      onClick={() => addToWishlist(product, addToast)}\n                    >\n                      <i className=\"pe-7s-like\" />\n                    </button>\n                  </div>\n                  <div className=\"shop-list-compare ml-10\">\n                    <button\n                      className={compareItem !== undefined ? \"active\" : \"\"}\n                      disabled={compareItem !== undefined}\n                      title={\n                        compareItem !== undefined\n                          ? \"Added to compare\"\n                          : \"Add to compare\"\n                      }\n                      onClick={() => addToCompare(product, addToast)}\n                    >\n                      <i className=\"pe-7s-shuffle\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* product modal */}\n      <ProductModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        product={product}\n        currency={currency}\n        discountedprice={discountedPrice}\n        finalproductprice={finalProductPrice}\n        finaldiscountedprice={finalDiscountedPrice}\n        cartitem={cartItem}\n        wishlistitem={wishlistItem}\n        compareitem={compareItem}\n        addtocart={addToCart}\n        addtowishlist={addToWishlist}\n        addtocompare={addToCompare}\n        addtoast={addToast}\n      />\n    </Fragment>\n  );\n};\n\nProductGridListSingle.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItem: PropTypes.object,\n  compareItem: PropTypes.object,\n  currency: PropTypes.object,\n  product: PropTypes.object,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  wishlistItem: PropTypes.object\n};\n\nexport default ProductGridListSingle;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare } from \"../../redux/actions/compareActions\";\nimport ProductGridListSingle from \"../../components/product/ProductGridListSingle\";\n\nconst ProductGrid = ({\n  products,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  sliderClassName,\n  spaceBottomClass\n}) => {\n  return (\n    <Fragment>\n      {products.map(product => {\n        return (\n          <ProductGridListSingle\n            sliderClassName={sliderClassName}\n            spaceBottomClass={spaceBottomClass}\n            product={product}\n            currency={currency}\n            addToCart={addToCart}\n            addToWishlist={addToWishlist}\n            addToCompare={addToCompare}\n            cartItem={\n              cartItems.filter(cartItem => cartItem.id === product._id)[0]\n            }\n            wishlistItem={\n              wishlistItems.filter(\n                wishlistItem => wishlistItem.id === product._id\n              )[0]\n            }\n            compareItem={\n              compareItems.filter(\n                compareItem => compareItem.id === product._id\n              )[0]\n            }\n            key={product._id}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nProductGrid.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItems: PropTypes.array,\n  compareItems: PropTypes.array,\n  currency: PropTypes.object,\n  products: PropTypes.array,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  wishlistItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    currency: state.currencyData,\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (\n      item,\n      addToast,\n      quantityCount,\n      selectedProductColor,\n      selectedProductSize\n    ) => {\n      dispatch(\n        addToCart(\n          item,\n          addToast,\n          quantityCount,\n          selectedProductColor,\n          selectedProductSize\n        )\n      );\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGrid);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ProductgridList from \"./ProductgridList\";\n\nconst ShopProducts = ({ products, layout }) => {\n  return (\n    <div className=\"shop-bottom-area mt-35\">\n      <div className={`row ${layout ? layout : \"\"}`}>\n        <ProductgridList products={products} spaceBottomClass=\"mb-25\" />\n      </div>\n    </div>\n  );\n};\n\nShopProducts.propTypes = {\n  layout: PropTypes.string,\n  products: PropTypes.array\n};\n\nexport default ShopProducts;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes,\n  setActiveSort\n} from \"../../helpers/product\";\n\nconst ShopTopFilter = ({ products, getSortParams }) => {\n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueColors = getIndividualColors(products);\n  const uniqueSizes = getProductsIndividualSizes(products);\n  const uniqueTags = getIndividualTags(products);\n\n  return (\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\n      <div className=\"product-filter-wrapper__inner\">\n        <div className=\"row\">\n          {/* Product Filter */}\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\n            <div className=\"product-filter\">\n              <h5>Categories</h5>\n              {uniqueCategories ? (\n                <ul>\n                  {uniqueCategories.map((category, key) => {\n                    return (\n                      <li key={key}>\n                        <button\n                          onClick={e => {\n                            getSortParams(\"category\", category);\n                            setActiveSort(e);\n                          }}\n                        >\n                          {category}\n                        </button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                \"No categories found\"\n              )}\n            </div>\n          </div>\n\n          {/* Product Filter */}\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\n            <div className=\"product-filter\">\n              <h5>Color</h5>\n              {uniqueColors ? (\n                <ul>\n                  {uniqueColors.map((color, key) => {\n                    return (\n                      <li key={key}>\n                        <button\n                          onClick={e => {\n                            getSortParams(\"color\", color);\n                            setActiveSort(e);\n                          }}\n                        >\n                          {color}\n                        </button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                \"No colors found\"\n              )}\n            </div>\n          </div>\n          {/* Product Filter */}\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\n            <div className=\"product-filter\">\n              <h5>Size</h5>\n              {uniqueSizes ? (\n                <ul>\n                  {uniqueSizes.map((size, key) => {\n                    return (\n                      <li key={key}>\n                        <button\n                          className=\"text-uppercase\"\n                          onClick={e => {\n                            getSortParams(\"size\", size);\n                            setActiveSort(e);\n                          }}\n                        >\n                          {size}\n                        </button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                \"No sizes found\"\n              )}\n            </div>\n          </div>\n          {/* Product Filter */}\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\n            <div className=\"product-filter product-filter--tag\">\n              <h5>Tag</h5>\n              {uniqueTags ? (\n                <ul>\n                  {uniqueTags.map((tag, key) => {\n                    return (\n                      <li key={key}>\n                        <button\n                          onClick={e => {\n                            getSortParams(\"tag\", tag);\n                            setActiveSort(e);\n                          }}\n                        >\n                          {tag}\n                        </button>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                \"No tags found\"\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShopTopFilter.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array\n};\n\nexport default ShopTopFilter;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopFilter from \"./ShopTopFilter\";\nimport { toggleShopTopFilter } from \"../../helpers/product\";\n\nconst ShopTopActionFilter = ({\n  getFilterSortParams,\n  productCount,\n  sortedProductCount,\n  products,\n  getSortParams\n}) => {\n  return (\n    <Fragment>\n      <div className=\"shop-top-bar mb-35\">\n        <div className=\"select-shoing-wrap\">\n          <div className=\"shop-select\">\n            <select\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\n            >\n              <option value=\"default\">Default</option>\n              <option value=\"priceHighToLow\">Price - High to Low</option>\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\n            </select>\n          </div>\n          <p>\n            Showing {sortedProductCount} of {productCount} result\n          </p>\n        </div>\n\n        <div className=\"filter-active\">\n          <button onClick={e => toggleShopTopFilter(e)}>\n            <i className=\"fa fa-plus\"></i> filter\n          </button>\n        </div>\n      </div>\n\n      {/* shop top filter */}\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\n    </Fragment>\n  );\n};\n\nShopTopActionFilter.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getSortParams: PropTypes.func,\n  productCount: PropTypes.number,\n  products: PropTypes.array,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopActionFilter;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount,\n  products,\n  getSortParams\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopActionFilter\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n        products={products}\n        getSortParams={getSortParams}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  getSortParams: PropTypes.func,\n  productCount: PropTypes.number,\n  products: PropTypes.array,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"sourceRoot":""}