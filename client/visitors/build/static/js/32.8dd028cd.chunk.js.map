{"version":3,"sources":["components/hero-slider/HeroSliderOneSingle.js","wrappers/hero-slider/HeroSliderOne.js","components/feature-icon/FeatureIconSingle.js","wrappers/feature-icon/FeatureIcon.js","wrappers/product/TabProduct.js","pages/home/HomeFashion.js","components/product/sub-components/ProductRating.js","components/product/ProductModal.js","components/product/ProductGridSingle.js","wrappers/product/ProductGrid.js"],"names":["connect","state","slider","data","sliderClassName","className","style","padding","marginBottom","marginLeft","title","subtitle","to","process","url","src","image","alt","params","effect","loop","speed","autoplay","delay","disableOnInteraction","watchSlidesVisibility","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","map","single","key","FeatureIconSingle","singleFeature","multilanguage","strings","spaceTopClass","spaceBottomClass","id","bgColorClass","category","Tab","Container","defaultActiveKey","Nav","variant","Item","Link","eventKey","Content","Pane","ProductGrid","type","limit","HomeFashion","name","content","LayoutOne","headerContainerClass","headerPaddingClass","headerTop","ProductRating","ratingValue","rating","i","push","cartitems","cartData","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","useState","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","variation","color","selectedProductColor","setSelectedProductColor","size","selectedProductSize","setSelectedProductSize","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","cartItems","productCartQty","getProductCartQuantity","useEffect","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","show","onHide","Header","closeButton","currencySymbol","shortDescription","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","ProductGridSingle","cartItem","modalShow","setModalShow","useToasts","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","_id","length","new","quantity","ProductModal","cartitem","ownProps","products","getProducts","productData","currencyData","wishlistItems","wishlistData","compareItems","compareData","dispatch","item","filter"],"mappings":"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","file":"static/js/32.8dd028cd.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\"; \r\nimport {routes} from '../../config/routes'\r\nconst HeroSliderOneSingle = ({ data, sliderClassName }) => {\r\n  return (\r\n    <div\r\n     \r\n      className={`single-slider slider-height-1 bg-purple ${\r\n        sliderClassName ? sliderClassName : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div  className=\"col-xl-6 col-lg-6 col-md-6 col-12 col-sm-6\">\r\n            <div  style ={{padding:\"50px\", marginBottom:\"10px\", marginLeft:\"20px\"}} className=\"slider-content slider-animated-1\">\r\n              <h3 className=\"animated\">{data.title}</h3>\r\n              <h1 className=\"animated\">{data.subtitle}</h1>\r\n              <div className=\"slider-btn btn-hover\">\r\n                <Link\r\n                  className=\"animated\"\r\n                  to={process.env.PUBLIC_URL + data.url}\r\n                >\r\n                  SHOP NOW\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-6 col-lg-6 col-md-6 col-12 col-sm-6\">\r\n            <div className=\"slider-single-img slider-animated-1\">\r\n              <img\r\n                className=\"animated img-fluid\"\r\n                src={ data.image}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeroSliderOneSingle.propTypes = {\r\n  data: PropTypes.object,\r\n  sliderClassName: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    slider: state.slider,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeroSliderOneSingle);\r\n","import React from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\n\r\nimport HeroSliderOneSingle from \"../../components/hero-slider/HeroSliderOneSingle.js\";\r\nimport { connect } from \"react-redux\"; \r\n\r\nconst HeroSliderOne = ({slider}) => {\r\n  const params = {\r\n    effect: \"fade\",\r\n    loop: true,\r\n    speed: 1000,\r\n    autoplay: {\r\n      delay: 5000,\r\n      disableOnInteraction: false\r\n    },\r\n    watchSlidesVisibility: true,\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\"\r\n    },\r\n\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-area\">\r\n      <div className=\"slider-active nav-style-1\">\r\n        <Swiper {...params}>\r\n          {slider &&\r\n            slider.map((single, key) => {\r\n              return (\r\n                <HeroSliderOneSingle\r\n                  sliderClassName=\"swiper-slide\"\r\n                  data={single}\r\n                  key={key}\r\n                />\r\n              );\r\n            })}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    slider: state.slider,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeroSliderOne);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst FeatureIconSingle = ({ singleFeature }) => {\r\n  return (\r\n    <div className=\"col-lg-3 col-sm-6\">\r\n      <div className=\"support-wrap mb-30\">\r\n        <div className=\"support-icon\">\r\n          <img\r\n            className=\"animated\"\r\n            src={ singleFeature.image}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"support-content\">\r\n          <h5>{singleFeature.title}</h5>\r\n          <p>{singleFeature.subtitle}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeatureIconSingle.propTypes = {\r\n  singleFeature: PropTypes.object\r\n};\r\n\r\nexport default FeatureIconSingle;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport FeatureIconSingle from \"../../components/feature-icon/FeatureIconSingle\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nconst FeatureIcon = ({strings, spaceTopClass, spaceBottomClass }) => {\r\n \r\n\r\n  return (\r\n    <div\r\n      className={`support-area ${spaceTopClass ? spaceTopClass : \"\"} ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {strings[\"fun_fact\"].map(singleFeature => {\r\n            return (\r\n              <FeatureIconSingle\r\n                singleFeature={singleFeature}\r\n                key={singleFeature.id}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeatureIcon.propTypes = {\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default multilanguage(FeatureIcon);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport ProductGrid from \"./ProductGrid\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\n\r\nconst TabProduct = ({\r\n  strings,\r\n  spaceTopClass,\r\n  spaceBottomClass,\r\n  bgColorClass,\r\n  category\r\n}) => {\r\n\r\n\r\n  return (\r\n    <div\r\n      className={`product-area ${spaceTopClass ? spaceTopClass : \"\"} ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      } ${bgColorClass ? bgColorClass : \"\"}`}\r\n    >\r\n      <div className=\"container\">\r\n        <Tab.Container defaultActiveKey=  \"anyItems\">\r\n          <Nav\r\n            variant=\"pills\"\r\n            className=\"product-tab-list pt-30 pb-55 text-center\"\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link  eventKey=\"anyItems\">\r\n                <h4> {strings[\"available_stock\"]}</h4>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            {/* <Nav.Item>\r\n              <Nav.Link  eventKey=\"newArrival\">\r\n                <h4> {strings[\"new_arrivals\"]}</h4>\r\n              </Nav.Link>\r\n            </Nav.Item> */}\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"newArrival\">\r\n              <div className=\"row\">\r\n                <ProductGrid\r\n                  category={category}\r\n                  type=\"new\"\r\n                  limit={8}\r\n                  spaceBottomClass=\"mb-25\"\r\n                />\r\n              </div>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"anyItems\">\r\n              <div className=\"row\">\r\n                <ProductGrid\r\n                  category={category}\r\n                  type=\"anyItems\"\r\n                  limit={8}\r\n                  spaceBottomClass=\"mb-25\"\r\n                />\r\n              </div>\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTabProduct.propTypes = {\r\n  bgColorClass: PropTypes.string,\r\n  category: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default multilanguage(TabProduct);\r\n","import React, { Fragment} from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport HeroSliderOne from \"../../wrappers/hero-slider/HeroSliderOne\";\r\nimport FeatureIcon from \"../../wrappers/feature-icon/FeatureIcon\";\r\nimport TabProduct from \"../../wrappers/product/TabProduct\";\r\n\r\nconst HomeFashion = () => {\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags> \r\n        <title>Wendy Fy Home </title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Fashion home of Wend Fy react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n      <LayoutOne\r\n        headerContainerClass=\"container-fluid\"\r\n        headerPaddingClass=\"header-padding-1\"\r\n        headerTop=\"visible\"\r\n      >\r\n     \r\n        <HeroSliderOne />\r\n\r\n        <FeatureIcon spaceTopClass=\"pt-100\" spaceBottomClass=\"pb-60\" />\r\n       \r\n        <TabProduct spaceBottomClass=\"pb-60\" category=\"fashion\" />\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeFashion;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ProductRating = ({ ratingValue }) => {\r\n  let rating = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\r\n  }\r\n  if (ratingValue && ratingValue > 0) {\r\n    for (let i = 0; i <= ratingValue - 1; i++) {\r\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\r\n    }\r\n  }\r\n  return <Fragment>{rating}</Fragment>;\r\n};\r\n\r\nProductRating.propTypes = {\r\n  ratingValue: PropTypes.number\r\n};\r\n\r\nexport default ProductRating;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport { getProductCartQuantity } from \"../../helpers/product\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Rating from \"./sub-components/ProductRating\";\r\nimport { connect } from \"react-redux\";\r\nimport {routes} from \"../../config/routes\"\r\nimport {multilanguage} from \"redux-multilanguage\";\r\nfunction ProductModal(props) {\r\n  const { product } = props;\r\n  const { currency } = props;\r\n  const { discountedprice } = props;\r\n  const { finalproductprice } = props;\r\n  const { finaldiscountedprice } = props;\r\n  const { strings } = props;\r\n\r\n  const [gallerySwiper, getGallerySwiper] = useState(null);\r\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\r\n  const [selectedProductColor, setSelectedProductColor] = useState(\r\n    product.variation ? product.variation[0].color : \"\"\r\n  );\r\n  const [selectedProductSize, setSelectedProductSize] = useState(\r\n    product.variation ? product.variation[0].size[0].name : \"\"\r\n  );\r\n  const [productStock, setProductStock] = useState(\r\n    product.variation ? product.variation[0].size[0].stock : product.stock\r\n  );\r\n  const [quantityCount, setQuantityCount] = useState(1);\r\n\r\n  const wishlistItem = props.wishlistitem;\r\n  const compareItem = props.compareitem;\r\n\r\n  const addToCart = props.addtocart;\r\n  const addToWishlist = props.addtowishlist;\r\n  const addToCompare = props.addtocompare;\r\n\r\n  const addToast = props.addtoast;\r\n  const cartItems = props.cartitems;\r\n\r\n  const productCartQty = getProductCartQuantity(\r\n    cartItems,\r\n    product,\r\n    selectedProductColor,\r\n    selectedProductSize\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gallerySwiper !== null &&\r\n      gallerySwiper.controller &&\r\n      thumbnailSwiper !== null &&\r\n      thumbnailSwiper.controller\r\n    ) {\r\n      gallerySwiper.controller.control = thumbnailSwiper;\r\n      thumbnailSwiper.controller.control = gallerySwiper;\r\n    }\r\n  }, [gallerySwiper, thumbnailSwiper]);\r\n\r\n  const gallerySwiperParams = {\r\n    getSwiper: getGallerySwiper,\r\n    spaceBetween: 10,\r\n    loopedSlides: 4,\r\n    loop: true\r\n  };\r\n\r\n  const thumbnailSwiperParams = {\r\n    getSwiper: getThumbnailSwiper,\r\n    spaceBetween: 10,\r\n    slidesPerView: 4,\r\n    loopedSlides: 4,\r\n    touchRatio: 0.2,\r\n    freeMode: true,\r\n    loop: true,\r\n    slideToClickedSlide: true,\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\"\r\n    },\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        className=\"product-quickview-modal-wrapper\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\r\n              <div className=\"product-large-image-wrapper\">\r\n                <Swiper {...gallerySwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={  single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n              <div className=\"product-small-image-wrapper mt-15\">\r\n                <Swiper {...thumbnailSwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={  single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\r\n              <div className=\"product-details-content quickview-content\">\r\n                <h2>{product.name}</h2>\r\n                <div className=\"product-details-price\">\r\n                  {discountedprice !== null ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {currency.currencySymbol + finaldiscountedprice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {currency.currencySymbol + finalproductprice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <span>{currency.currencySymbol + finalproductprice} </span>\r\n                  )}\r\n                </div>\r\n                {product.rating && product.rating > 0 ? (\r\n                  <div className=\"pro-details-rating-wrap\">\r\n                    <div className=\"pro-details-rating\">\r\n                      <Rating ratingValue={product.rating} />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"pro-details-list\">\r\n                  <p>{product.shortDescription}</p>\r\n                </div>\r\n\r\n                {product.variation ? (\r\n                  <div className=\"pro-details-size-color\">\r\n                    <div className=\"pro-details-color-wrap\">\r\n                      <span>{strings['color']}</span>\r\n                      <div className=\"pro-details-color-content\">\r\n                        {product.variation.map((single, key) => {\r\n                          return (\r\n                            <label\r\n                              className={`pro-details-color-content--single ${single.color}`}\r\n                              key={key}\r\n                            >\r\n                              <input\r\n                                type=\"radio\"\r\n                                value={single.color}\r\n                                name=\"product-color\"\r\n                                checked={\r\n                                  single.color === selectedProductColor\r\n                                    ? \"checked\"\r\n                                    : \"\"\r\n                                }\r\n                                onChange={() => {\r\n                                  setSelectedProductColor(single.color);\r\n                                  setSelectedProductSize(single.size[0].name);\r\n                                  setProductStock(single.size[0].stock);\r\n                                  setQuantityCount(1);\r\n                                }}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                            </label>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pro-details-size\">\r\n                      <span>{strings['size']}</span>\r\n                      <div className=\"pro-details-size-content\">\r\n                        {product.variation &&\r\n                          product.variation.map(single => {\r\n                            return single.color === selectedProductColor\r\n                              ? single.size.map((singleSize, key) => {\r\n                                  return (\r\n                                    <label\r\n                                      className={`pro-details-size-content--single`}\r\n                                      key={key}\r\n                                    >\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        value={singleSize.name}\r\n                                        checked={\r\n                                          singleSize.name ===\r\n                                          selectedProductSize\r\n                                            ? \"checked\"\r\n                                            : \"\"\r\n                                        }\r\n                                        onChange={() => {\r\n                                          setSelectedProductSize(\r\n                                            singleSize.name\r\n                                          );\r\n                                          setProductStock(singleSize.stock);\r\n                                          setQuantityCount(1);\r\n                                        }}\r\n                                      />\r\n                                      <span className=\"size-name\">\r\n                                        {singleSize.name}\r\n                                      </span>\r\n                                    </label>\r\n                                  );\r\n                                })\r\n                              : \"\";\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.affiliateLink ? (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      <a\r\n                        href={product.affiliateLink}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Buy Now\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"cart-plus-minus\">\r\n                      <button\r\n                        onClick={() =>\r\n                          setQuantityCount(\r\n                            quantityCount > 1 ? quantityCount - 1 : 1\r\n                          )\r\n                        }\r\n                        className=\"dec qtybutton\"\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <input\r\n                        className=\"cart-plus-minus-box\"\r\n                        type=\"text\"\r\n                        value={quantityCount}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        onClick={() =>\r\n                          setQuantityCount(\r\n                            quantityCount < productStock - productCartQty\r\n                              ? quantityCount + 1\r\n                              : quantityCount\r\n                          )\r\n                        }\r\n                        className=\"inc qtybutton\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      {productStock && productStock > 0 ? (\r\n                        <button\r\n                          onClick={() =>\r\n                            addToCart(\r\n                              product,\r\n                              addToast,\r\n                              quantityCount,\r\n                              selectedProductColor,\r\n                              selectedProductSize\r\n                            )\r\n                          }\r\n                          disabled={productCartQty >= productStock}\r\n                        >\r\n                          {\" \"}\r\n                          {strings['add_to_cart']}{\" \"}\r\n                        </button>\r\n                      ) : (\r\n                        <button disabled>{strings['out_of_stock']}</button>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"pro-details-wishlist\">\r\n                      <button\r\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={wishlistItem !== undefined}\r\n                        title={\r\n                          wishlistItem !== undefined\r\n                              ? strings['added_to_wishlist']\r\n                              : strings['add_to_wishlist']\r\n                        }\r\n                        onClick={() => addToWishlist(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-like\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-compare\">\r\n                      <button\r\n                        className={compareItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={compareItem !== undefined}\r\n                        title={\r\n                          compareItem !== undefined\r\n                            ? strings['added_to_compare']\r\n                            : strings['add_to_compare']\r\n                        }\r\n                        onClick={() => addToCompare(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-shuffle\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nProductModal.propTypes = {\r\n  addtoast: PropTypes.func,\r\n  addtocart: PropTypes.func,\r\n  addtocompare: PropTypes.func,\r\n  addtowishlist: PropTypes.func,\r\n  cartitems: PropTypes.array,\r\n  compareitem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  discountedprice: PropTypes.number,\r\n  finaldiscountedprice: PropTypes.number,\r\n  finalproductprice: PropTypes.number,\r\n  onHide: PropTypes.func,\r\n  product: PropTypes.object,\r\n  show: PropTypes.bool,\r\n  wishlistitem: PropTypes.object,\r\n  strings:PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartitems: state.cartData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(multilanguage(ProductModal));\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport Rating from \"./sub-components/ProductRating\";\r\nimport ProductModal from \"./ProductModal\";\r\nimport {routes} from \"../../config/routes\"\r\nconst ProductGridSingle = ({\r\n  product,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItem,\r\n  wishlistItem,\r\n  compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass\r\n}) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const discountedPrice = getDiscountPrice(product.price, product.discount);\r\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\r\n  const finalDiscountedPrice = +(\r\n    discountedPrice * currency.currencyRate\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`col-xl-3 col-md-6 col-lg-4 col-sm-6 ${\r\n          sliderClassName ? sliderClassName : \"\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`product-wrap ${spaceBottomClass ? spaceBottomClass : \"\"}`}\r\n        >\r\n          <div className=\"product-img\">\r\n            <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n              <img\r\n                className=\"default-img\"\r\n                src={ product.image[0]}\r\n                alt=\"\"\r\n              />\r\n              {product.image.length > 1 ? (\r\n                <img\r\n                  className=\"hover-img\"\r\n                  src={product.image[1]}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Link>\r\n            {product.discount || product.new ? (\r\n              <div className=\"product-img-badges\">\r\n                {product.discount ? (\r\n                  <span className=\"pink\">-{product.discount}%</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"product-action\">\r\n              <div className=\"pro-same-action pro-wishlist\">\r\n                <button\r\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                  disabled={wishlistItem !== undefined}\r\n                  title={\r\n                    wishlistItem !== undefined\r\n                      ? \"Added to wishlist\"\r\n                      : \"Add to wishlist\"\r\n                  }\r\n                  onClick={() => addToWishlist(product, addToast)}\r\n                >\r\n                  <i className=\"pe-7s-like\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"pro-same-action pro-cart\">\r\n                {product.affiliateLink ? (\r\n                  <a\r\n                    href={product.affiliateLink}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    {\" \"}\r\n                    Buy now{\" \"}\r\n                  </a>\r\n                ) : product.variation && product.variation.length >= 1 ? (\r\n                  <Link to={`${process.env.PUBLIC_URL}/product/${product._id}`}>\r\n                    Select Option\r\n                  </Link>\r\n                ) : product.stock && product.stock > 0 ? (\r\n                  <button\r\n                    onClick={() => addToCart(product, addToast)}\r\n                    className={\r\n                      cartItem !== undefined && cartItem.quantity > 0\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }\r\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\r\n                    title={\r\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"pe-7s-cart\"></i>{\" \"}\r\n                    {cartItem !== undefined && cartItem.quantity > 0\r\n                      ? \"Added\"\r\n                      : \"Add to cart\"}\r\n                  </button>\r\n                ) : (\r\n                  <button disabled className=\"active\">\r\n                    Out of Stock\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"pro-same-action pro-quickview\">\r\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\r\n                  <i className=\"pe-7s-look\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"product-content text-center\">\r\n            <h3>\r\n              <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n                {product.name}\r\n              </Link>\r\n            </h3>\r\n            {product.rating && product.rating > 0 ? (\r\n              <div className=\"product-rating\">\r\n                <Rating ratingValue={product.rating} />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"product-price\">\r\n              {discountedPrice !== null ? (\r\n                <Fragment>\r\n                  <span>{currency.currencySymbol + finalDiscountedPrice}</span>{\" \"}\r\n                  <span className=\"old\">\r\n                    {currency.currencySymbol + finalProductPrice}\r\n                  </span>\r\n                </Fragment>\r\n              ) : (\r\n                <span>{currency.currencySymbol + finalProductPrice} </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* product modal */}\r\n      <ProductModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        product={product}\r\n        currency={currency}\r\n        discountedprice={discountedPrice}\r\n        finalproductprice={finalProductPrice}\r\n        finaldiscountedprice={finalDiscountedPrice}\r\n        cartitem={cartItem}\r\n        wishlistitem={wishlistItem}\r\n        compareitem={compareItem}\r\n        addtocart={addToCart}\r\n        addtowishlist={addToWishlist}\r\n        addtocompare={addToCompare}\r\n        addtoast={addToast}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridSingle.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItem: PropTypes.object,\r\n  compareItem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  product: PropTypes.object,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  wishlistItem: PropTypes.object\r\n};\r\n\r\nexport default ProductGridSingle;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../helpers/product\";\r\nimport ProductGridSingle from \"../../components/product/ProductGridSingle\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\r\nimport { addToCompare } from \"../../redux/actions/compareActions\";\r\n\r\nconst ProductGrid = ({\r\n  products,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  sliderClassName,\r\n  spaceBottomClass\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {products.map(product => {\r\n        return (\r\n          <ProductGridSingle\r\n            sliderClassName={sliderClassName}\r\n            spaceBottomClass={spaceBottomClass}\r\n            product={product}\r\n            currency={currency}\r\n            addToCart={addToCart}\r\n            addToWishlist={addToWishlist}\r\n            addToCompare={addToCompare}\r\n            cartItem={\r\n              cartItems.filter(cartItem => cartItem._id === product._id)[0]\r\n            }\r\n            wishlistItem={\r\n              wishlistItems.filter(\r\n                wishlistItem => wishlistItem._id === product._id\r\n              )[0]\r\n            }\r\n            compareItem={\r\n              compareItems.filter(\r\n                compareItem => compareItem._id === product._id\r\n              )[0]\r\n            }\r\n            key={product._id}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGrid.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  products: PropTypes.array,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  wishlistItems: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    products: getProducts(\r\n      state.productData.products,\r\n      ownProps.category,\r\n      ownProps.type,\r\n      ownProps.limit\r\n    ),\r\n    currency: state.currencyData,\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGrid);\r\n"],"sourceRoot":""}