{"version":3,"sources":["pages/shop/ShopGridStandard.js","components/product/sub-components/ProductRating.js","wrappers/breadcrumb/Breadcrumb.js","components/product/ProductModal.js","components/product/ProductGridListSingle.js","wrappers/product/ProductgridList.js","wrappers/product/ShopProducts.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopColor.js","components/product/ShopSize.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js"],"names":["connect","state","products","productData","multilanguage","location","strings","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","name","content","to","process","headerTop","className","getSortParams","sideSpaceClass","getLayout","getFilterSortParams","productCount","length","sortedProductCount","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","ProductRating","ratingValue","rating","i","push","key","Breadcrumb","separator","item","NavLink","finalItem","cartitems","cartData","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","variation","color","selectedProductColor","setSelectedProductColor","size","selectedProductSize","setSelectedProductSize","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","cartItems","productCartQty","getProductCartQuantity","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","show","onHide","Header","closeButton","image","map","single","src","alt","currencySymbol","shortDescription","type","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ProductGridListSingle","cartItem","sliderClassName","spaceBottomClass","modalShow","setModalShow","useToasts","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","_id","new","quantity","id","ProductModal","cartitem","currencyData","wishlistItems","wishlistData","compareItems","compareData","dispatch","filter","ShopProducts","ProductgridList","e","setActiveLayout","ShopTopbar","action","placeholder","ShopCategories","categories","setActiveSort","category","ShopColor","colors","ShopSize","sizes","ShopTag","tags","tag","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags"],"mappings":"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","file":"static/js/23.2b7f716e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\r\nimport { connect } from 'react-redux';\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport LayoutOne from '../../layouts/LayoutOne';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\r\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\nimport {multilanguage} from \"redux-multilanguage\";\r\n\r\nconst ShopGridStandard = ({location, products, strings}) => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n    const pageLimit = 15;\r\n    const {pathname} = location;\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <title>Wendy Fy | Shop Page</title>\r\n                <meta name=\"description\" content=\"Shop page of Wendy Fy react minimalist eCommerce template.\" />\r\n            </MetaTags>\r\n\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>{strings['home']}</BreadcrumbsItem>\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>{strings['shop']}</BreadcrumbsItem>\r\n\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                                {/* shop sidebar */}\r\n                                <ShopSidebar products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\"/>\r\n                            </div>\r\n                            <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                                {/* shop topbar default */}\r\n                                <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} />\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nShopGridStandard.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array,\r\n    strings:PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        products: state.productData.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(multilanguage(ShopGridStandard));","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ProductRating = ({ ratingValue }) => {\r\n  let rating = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\r\n  }\r\n  if (ratingValue && ratingValue > 0) {\r\n    for (let i = 0; i <= ratingValue - 1; i++) {\r\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\r\n    }\r\n  }\r\n  return <Fragment>{rating}</Fragment>;\r\n};\r\n\r\nProductRating.propTypes = {\r\n  ratingValue: PropTypes.number\r\n};\r\n\r\nexport default ProductRating;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport { getProductCartQuantity } from \"../../helpers/product\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Rating from \"./sub-components/ProductRating\";\r\nimport { connect } from \"react-redux\";\r\nimport {routes} from \"../../config/routes\"\r\nimport {multilanguage} from \"redux-multilanguage\";\r\nfunction ProductModal(props) {\r\n  const { product } = props;\r\n  const { currency } = props;\r\n  const { discountedprice } = props;\r\n  const { finalproductprice } = props;\r\n  const { finaldiscountedprice } = props;\r\n  const { strings } = props;\r\n\r\n  const [gallerySwiper, getGallerySwiper] = useState(null);\r\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\r\n  const [selectedProductColor, setSelectedProductColor] = useState(\r\n    product.variation ? product.variation[0].color : \"\"\r\n  );\r\n  const [selectedProductSize, setSelectedProductSize] = useState(\r\n    product.variation ? product.variation[0].size[0].name : \"\"\r\n  );\r\n  const [productStock, setProductStock] = useState(\r\n    product.variation ? product.variation[0].size[0].stock : product.stock\r\n  );\r\n  const [quantityCount, setQuantityCount] = useState(1);\r\n\r\n  const wishlistItem = props.wishlistitem;\r\n  const compareItem = props.compareitem;\r\n\r\n  const addToCart = props.addtocart;\r\n  const addToWishlist = props.addtowishlist;\r\n  const addToCompare = props.addtocompare;\r\n\r\n  const addToast = props.addtoast;\r\n  const cartItems = props.cartitems;\r\n\r\n  const productCartQty = getProductCartQuantity(\r\n    cartItems,\r\n    product,\r\n    selectedProductColor,\r\n    selectedProductSize\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gallerySwiper !== null &&\r\n      gallerySwiper.controller &&\r\n      thumbnailSwiper !== null &&\r\n      thumbnailSwiper.controller\r\n    ) {\r\n      gallerySwiper.controller.control = thumbnailSwiper;\r\n      thumbnailSwiper.controller.control = gallerySwiper;\r\n    }\r\n  }, [gallerySwiper, thumbnailSwiper]);\r\n\r\n  const gallerySwiperParams = {\r\n    getSwiper: getGallerySwiper,\r\n    spaceBetween: 10,\r\n    loopedSlides: 4,\r\n    loop: true\r\n  };\r\n\r\n  const thumbnailSwiperParams = {\r\n    getSwiper: getThumbnailSwiper,\r\n    spaceBetween: 10,\r\n    slidesPerView: 4,\r\n    loopedSlides: 4,\r\n    touchRatio: 0.2,\r\n    freeMode: true,\r\n    loop: true,\r\n    slideToClickedSlide: true,\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\"\r\n    },\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        className=\"product-quickview-modal-wrapper\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\r\n              <div className=\"product-large-image-wrapper\">\r\n                <Swiper {...gallerySwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={  single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n              <div className=\"product-small-image-wrapper mt-15\">\r\n                <Swiper {...thumbnailSwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={  single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\r\n              <div className=\"product-details-content quickview-content\">\r\n                <h2>{product.name}</h2>\r\n                <div className=\"product-details-price\">\r\n                  {discountedprice !== null ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {currency.currencySymbol + finaldiscountedprice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {currency.currencySymbol + finalproductprice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <span>{currency.currencySymbol + finalproductprice} </span>\r\n                  )}\r\n                </div>\r\n                {product.rating && product.rating > 0 ? (\r\n                  <div className=\"pro-details-rating-wrap\">\r\n                    <div className=\"pro-details-rating\">\r\n                      <Rating ratingValue={product.rating} />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"pro-details-list\">\r\n                  <p>{product.shortDescription}</p>\r\n                </div>\r\n\r\n                {product.variation ? (\r\n                  <div className=\"pro-details-size-color\">\r\n                    <div className=\"pro-details-color-wrap\">\r\n                      <span>{strings['color']}</span>\r\n                      <div className=\"pro-details-color-content\">\r\n                        {product.variation.map((single, key) => {\r\n                          return (\r\n                            <label\r\n                              className={`pro-details-color-content--single ${single.color}`}\r\n                              key={key}\r\n                            >\r\n                              <input\r\n                                type=\"radio\"\r\n                                value={single.color}\r\n                                name=\"product-color\"\r\n                                checked={\r\n                                  single.color === selectedProductColor\r\n                                    ? \"checked\"\r\n                                    : \"\"\r\n                                }\r\n                                onChange={() => {\r\n                                  setSelectedProductColor(single.color);\r\n                                  setSelectedProductSize(single.size[0].name);\r\n                                  setProductStock(single.size[0].stock);\r\n                                  setQuantityCount(1);\r\n                                }}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                            </label>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pro-details-size\">\r\n                      <span>{strings['size']}</span>\r\n                      <div className=\"pro-details-size-content\">\r\n                        {product.variation &&\r\n                          product.variation.map(single => {\r\n                            return single.color === selectedProductColor\r\n                              ? single.size.map((singleSize, key) => {\r\n                                  return (\r\n                                    <label\r\n                                      className={`pro-details-size-content--single`}\r\n                                      key={key}\r\n                                    >\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        value={singleSize.name}\r\n                                        checked={\r\n                                          singleSize.name ===\r\n                                          selectedProductSize\r\n                                            ? \"checked\"\r\n                                            : \"\"\r\n                                        }\r\n                                        onChange={() => {\r\n                                          setSelectedProductSize(\r\n                                            singleSize.name\r\n                                          );\r\n                                          setProductStock(singleSize.stock);\r\n                                          setQuantityCount(1);\r\n                                        }}\r\n                                      />\r\n                                      <span className=\"size-name\">\r\n                                        {singleSize.name}\r\n                                      </span>\r\n                                    </label>\r\n                                  );\r\n                                })\r\n                              : \"\";\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.affiliateLink ? (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      <a\r\n                        href={product.affiliateLink}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Buy Now\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"cart-plus-minus\">\r\n                      <button\r\n                        onClick={() =>\r\n                          setQuantityCount(\r\n                            quantityCount > 1 ? quantityCount - 1 : 1\r\n                          )\r\n                        }\r\n                        className=\"dec qtybutton\"\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <input\r\n                        className=\"cart-plus-minus-box\"\r\n                        type=\"text\"\r\n                        value={quantityCount}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        onClick={() =>\r\n                          setQuantityCount(\r\n                            quantityCount < productStock - productCartQty\r\n                              ? quantityCount + 1\r\n                              : quantityCount\r\n                          )\r\n                        }\r\n                        className=\"inc qtybutton\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      {productStock && productStock > 0 ? (\r\n                        <button\r\n                          onClick={() =>\r\n                            addToCart(\r\n                              product,\r\n                              addToast,\r\n                              quantityCount,\r\n                              selectedProductColor,\r\n                              selectedProductSize\r\n                            )\r\n                          }\r\n                          disabled={productCartQty >= productStock}\r\n                        >\r\n                          {\" \"}\r\n                          {strings['add_to_cart']}{\" \"}\r\n                        </button>\r\n                      ) : (\r\n                        <button disabled>{strings['out_of_stock']}</button>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"pro-details-wishlist\">\r\n                      <button\r\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={wishlistItem !== undefined}\r\n                        title={\r\n                          wishlistItem !== undefined\r\n                              ? strings['added_to_wishlist']\r\n                              : strings['add_to_wishlist']\r\n                        }\r\n                        onClick={() => addToWishlist(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-like\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-compare\">\r\n                      <button\r\n                        className={compareItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={compareItem !== undefined}\r\n                        title={\r\n                          compareItem !== undefined\r\n                            ? strings['added_to_compare']\r\n                            : strings['add_to_compare']\r\n                        }\r\n                        onClick={() => addToCompare(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-shuffle\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nProductModal.propTypes = {\r\n  addtoast: PropTypes.func,\r\n  addtocart: PropTypes.func,\r\n  addtocompare: PropTypes.func,\r\n  addtowishlist: PropTypes.func,\r\n  cartitems: PropTypes.array,\r\n  compareitem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  discountedprice: PropTypes.number,\r\n  finaldiscountedprice: PropTypes.number,\r\n  finalproductprice: PropTypes.number,\r\n  onHide: PropTypes.func,\r\n  product: PropTypes.object,\r\n  show: PropTypes.bool,\r\n  wishlistitem: PropTypes.object,\r\n  strings:PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartitems: state.cartData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(multilanguage(ProductModal));\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport Rating from \"./sub-components/ProductRating\";\r\nimport ProductModal from \"./ProductModal\";\r\nimport {routes} from \"../../config/routes\"\r\nconst ProductGridListSingle = ({\r\n  product,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItem,\r\n  wishlistItem,\r\n  compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass\r\n}) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  const discountedPrice = getDiscountPrice(product.price, product.discount);\r\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\r\n  const finalDiscountedPrice = +(\r\n    discountedPrice * currency.currencyRate\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`col-xl-4 col-sm-6 ${\r\n          sliderClassName ? sliderClassName : \"\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`product-wrap ${spaceBottomClass ? spaceBottomClass : \"\"}`}\r\n        >\r\n          <div className=\"product-img\">\r\n            <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n              <img\r\n                className=\"default-img\"\r\n                src={product.image[0]}\r\n                alt=\"\"\r\n              />\r\n              {product.image.length > 1 ? (\r\n                <img\r\n                  className=\"hover-img\"\r\n                  src={product.image[1]}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Link>\r\n            {product.discount || product.new ? (\r\n              <div className=\"product-img-badges\">\r\n                {product.discount ? (\r\n                  <span className=\"pink\">-{product.discount}%</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"product-action\">\r\n              <div className=\"pro-same-action pro-wishlist\">\r\n                <button\r\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                  disabled={wishlistItem !== undefined}\r\n                  title={\r\n                    wishlistItem !== undefined\r\n                      ? \"Added to wishlist\"\r\n                      : \"Add to wishlist\"\r\n                  }\r\n                  onClick={() => addToWishlist(product, addToast)}\r\n                >\r\n                  <i className=\"pe-7s-like\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"pro-same-action pro-cart\">\r\n                {product.affiliateLink ? (\r\n                  <a\r\n                    href={product.affiliateLink}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    {\" \"}\r\n                    Buy now{\" \"}\r\n                  </a>\r\n                ) : product.variation && product.variation.length >= 1 ? (\r\n                  <Link to={`${process.env.PUBLIC_URL}/product/${product._id}`}>\r\n                    Voir Plus\r\n                  </Link>\r\n                ) : product.stock && product.stock > 0 ? (\r\n                  <button\r\n                    onClick={() => addToCart(product, addToast)}\r\n                    className={\r\n                      cartItem !== undefined && cartItem.quantity > 0\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }\r\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\r\n                    title={\r\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"pe-7s-cart\"></i>{\" \"}\r\n                    {cartItem !== undefined && cartItem.quantity > 0\r\n                      ? \"Added\"\r\n                      : \"Add to cart\"}\r\n                  </button>\r\n                ) : (\r\n                  <button disabled className=\"active\">\r\n                    Out of Stock\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"pro-same-action pro-quickview\">\r\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\r\n                  <i className=\"pe-7s-look\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"product-content text-center\">\r\n            <h3>\r\n              <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}>\r\n                {product.name}\r\n              </Link>\r\n            </h3>\r\n            {product.rating && product.rating > 0 ? (\r\n              <div className=\"product-rating\">\r\n                <Rating ratingValue={product.rating} />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"product-price\">\r\n              {discountedPrice !== null ? (\r\n                <Fragment>\r\n                  <span>{currency.currencySymbol + finalDiscountedPrice}</span>{\" \"}\r\n                  <span className=\"old\">\r\n                    {currency.currencySymbol + finalProductPrice}\r\n                  </span>\r\n                </Fragment>\r\n              ) : (\r\n                <span>{currency.currencySymbol + finalProductPrice} </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"shop-list-wrap mb-30\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-4 col-md-5 col-sm-6\">\r\n              <div className=\"product-list-image-wrap\">\r\n                <div className=\"product-img\">\r\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n                    <img\r\n                      className=\"default-img img-fluid\"\r\n                      src={ product.image[0]}\r\n                      alt=\"\"\r\n                    />\r\n                    {product.image.length > 1 ? (\r\n                      <img\r\n                        className=\"hover-img img-fluid\"\r\n                        src={product.image[1]}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Link>\r\n                  {product.discount || product.new ? (\r\n                    <div className=\"product-img-badges\">\r\n                      {product.discount ? (\r\n                        <span className=\"pink\">-{product.discount}%</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-8 col-md-7 col-sm-6\">\r\n              <div className=\"shop-list-content\">\r\n                <h3>\r\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n                    {product.name}\r\n                  </Link>\r\n                </h3>\r\n                <div className=\"product-list-price\">\r\n                  {discountedPrice !== null ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {currency.currencySymbol + finalDiscountedPrice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {currency.currencySymbol + finalProductPrice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <span>{currency.currencySymbol + finalProductPrice} </span>\r\n                  )}\r\n                </div>\r\n                {product.rating && product.rating > 0 ? (\r\n                  <div className=\"rating-review\">\r\n                    <div className=\"product-list-rating\">\r\n                      <Rating ratingValue={product.rating} />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.shortDescription ? (\r\n                  <p>{product.shortDescription}</p>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <div className=\"shop-list-actions d-flex align-items-center\">\r\n                  <div className=\"shop-list-btn btn-hover\">\r\n                    {product.affiliateLink ? (\r\n                      <a\r\n                        href={product.affiliateLink}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        {\" \"}\r\n                        Buy now{\" \"}\r\n                      </a>\r\n                    ) : product.variation && product.variation.length >= 1 ? (\r\n                      <Link\r\n                        to={`${process.env.PUBLIC_URL}/product/${product._id}`}\r\n                      >\r\n                        Select Option\r\n                      </Link>\r\n                    ) : product.stock && product.stock > 0 ? (\r\n                      <button\r\n                        onClick={() => addToCart(product, addToast)}\r\n                        className={\r\n                          cartItem !== undefined && cartItem.quantity > 0\r\n                            ? \"active\"\r\n                            : \"\"\r\n                        }\r\n                        disabled={\r\n                          cartItem !== undefined && cartItem.quantity > 0\r\n                        }\r\n                        title={\r\n                          cartItem !== undefined\r\n                            ? \"Added to cart\"\r\n                            : \"Add to cart\"\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        <i className=\"pe-7s-cart\"></i>{\" \"}\r\n                        {cartItem !== undefined && cartItem.quantity > 0\r\n                          ? \"Added\"\r\n                          : \"Add to cart\"}\r\n                      </button>\r\n                    ) : (\r\n                      <button disabled className=\"active\">\r\n                        Out of Stock\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"shop-list-wishlist ml-10\">\r\n                    <button\r\n                      className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                      disabled={wishlistItem !== undefined}\r\n                      title={\r\n                        wishlistItem !== undefined\r\n                          ? \"Added to wishlist\"\r\n                          : \"Add to wishlist\"\r\n                      }\r\n                      onClick={() => addToWishlist(product, addToast)}\r\n                    >\r\n                      <i className=\"pe-7s-like\" />\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"shop-list-compare ml-10\">\r\n                    <button\r\n                      className={compareItem !== undefined ? \"active\" : \"\"}\r\n                      disabled={compareItem !== undefined}\r\n                      title={\r\n                        compareItem !== undefined\r\n                          ? \"Added to compare\"\r\n                          : \"Add to compare\"\r\n                      }\r\n                      onClick={() => addToCompare(product, addToast)}\r\n                    >\r\n                      <i className=\"pe-7s-shuffle\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* product modal */}\r\n      <ProductModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        product={product}\r\n        currency={currency}\r\n        discountedprice={discountedPrice}\r\n        finalproductprice={finalProductPrice}\r\n        finaldiscountedprice={finalDiscountedPrice}\r\n        cartitem={cartItem}\r\n        wishlistitem={wishlistItem}\r\n        compareitem={compareItem}\r\n        addtocart={addToCart}\r\n        addtowishlist={addToWishlist}\r\n        addtocompare={addToCompare}\r\n        addtoast={addToast}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridListSingle.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItem: PropTypes.object,\r\n  compareItem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  product: PropTypes.object,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  wishlistItem: PropTypes.object\r\n};\r\n\r\nexport default ProductGridListSingle;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\r\nimport { addToCompare } from \"../../redux/actions/compareActions\";\r\nimport ProductGridListSingle from \"../../components/product/ProductGridListSingle\";\r\n\r\nconst ProductGrid = ({\r\n  products,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  sliderClassName,\r\n  spaceBottomClass\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {products.map(product => {\r\n        return (\r\n          <ProductGridListSingle\r\n            sliderClassName={sliderClassName}\r\n            spaceBottomClass={spaceBottomClass}\r\n            product={product}\r\n            currency={currency}\r\n            addToCart={addToCart}\r\n            addToWishlist={addToWishlist}\r\n            addToCompare={addToCompare}\r\n            cartItem={\r\n              cartItems.filter(cartItem => cartItem.id === product._id)[0]\r\n            }\r\n            wishlistItem={\r\n              wishlistItems.filter(\r\n                wishlistItem => wishlistItem.id === product._id\r\n              )[0]\r\n            }\r\n            compareItem={\r\n              compareItems.filter(\r\n                compareItem => compareItem.id === product._id\r\n              )[0]\r\n            }\r\n            key={product._id}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGrid.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  products: PropTypes.array,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  wishlistItems: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currency: state.currencyData,\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGrid);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport ProductgridList from \"./ProductgridList\";\r\n\r\nconst ShopProducts = ({ products, layout }) => {\r\n  return (\r\n    <div className=\"shop-bottom-area mt-35\">\r\n      <div className={`row ${layout ? layout : \"\"}`}>\r\n        <ProductgridList products={products} spaceBottomClass=\"mb-25\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopProducts.propTypes = {\r\n  layout: PropTypes.string,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopProducts;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {setActiveLayout} from \"../../helpers/product\";\r\nimport {multilanguage} from \"redux-multilanguage\";\r\n\r\nconst ShopTopAction = ({\r\n                           getLayout,\r\n                           getFilterSortParams,\r\n                           productCount,\r\n                           sortedProductCount, strings\r\n                       }) => {\r\n    return (\r\n        <div className=\"shop-top-bar mb-35\">\r\n            <div className=\"select-shoing-wrap\">\r\n                <div className=\"shop-select\">\r\n                    <select\r\n                        onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n                    >\r\n                        <option value=\"default\">{strings[\"default\"]}</option>\r\n                        <option value=\"priceHighToLow\">{strings[\"price_high_low\"]}</option>\r\n                        <option value=\"priceLowToHigh\">{strings[\"price_low_high\"]}</option>\r\n                    </select>\r\n                </div>\r\n                <p>\r\n                    {strings['showing']} {sortedProductCount} {strings['of']} {productCount} {strings['result']}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"shop-tab\">\r\n                <button\r\n                    onClick={e => {\r\n                        getLayout(\"grid two-column\");\r\n                        setActiveLayout(e);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-th-large\"/>\r\n                </button>\r\n                <button\r\n                    onClick={e => {\r\n                        getLayout(\"grid three-column\");\r\n                        setActiveLayout(e);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-th\"/>\r\n                </button>\r\n                <button\r\n                    onClick={e => {\r\n                        getLayout(\"list\");\r\n                        setActiveLayout(e);\r\n                    }}\r\n                >\r\n                    <i className=\"fa fa-list-ul\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n    getFilterSortParams: PropTypes.func,\r\n    getLayout: PropTypes.func,\r\n    productCount: PropTypes.number,\r\n    sortedProductCount: PropTypes.number,\r\n    strings: PropTypes.object\r\n};\r\n\r\nexport default multilanguage(ShopTopAction);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {multilanguage} from \"redux-multilanguage\";\r\n\r\nconst ShopSearch = (strings) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">{strings['search']} </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\r\n          <input type=\"text\" placeholder={strings['search_here']} />\r\n          <button>\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nShopSearch.propTypes = {\r\n    strings:PropTypes.object\r\n};\r\n\r\nexport default multilanguage(ShopSearch);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {setActiveSort} from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({categories, getSortParams, strings}) => {\r\n    return (\r\n        <div className=\"sidebar-widget\">\r\n            <h4 className=\"pro-sidebar-title\">{strings['categories']} </h4>\r\n            <div className=\"sidebar-widget-list mt-30\">\r\n                {categories ? (\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"sidebar-widget-list-left\">\r\n                                <button\r\n                                    onClick={e => {\r\n                                        getSortParams(\"category\", \"\");\r\n                                        setActiveSort(e);\r\n                                    }}\r\n                                >\r\n                                    <span className=\"checkmark\"/> All Categories\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                        {categories.map((category, key) => {\r\n                            return (\r\n                                <li key={key}>\r\n                                    <div className=\"sidebar-widget-list-left\">\r\n                                        <button\r\n                                            onClick={e => {\r\n                                                getSortParams(\"category\", category);\r\n                                                setActiveSort(e);\r\n                                            }}\r\n                                        >\r\n                                            {\" \"}\r\n                                            <span className=\"checkmark\"/> {category}{\" \"}\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                ) : (\r\n                    strings['no_cats_found']\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n    categories: PropTypes.array,\r\n    getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopColor = ({ colors, getSortParams,strings }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">{strings['color']} </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"color\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> {strings['all_colors']}{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"color\", color);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /> {color}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          strings['no_colors_found']\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {setActiveSort} from \"../../helpers/product\";\r\n\r\nconst ShopSize = ({sizes, getSortParams, strings}) => {\r\n    return (\r\n        <div className=\"sidebar-widget mt-40\">\r\n            <h4 className=\"pro-sidebar-title\">{strings['size']}</h4>\r\n            <div className=\"sidebar-widget-list mt-20\">\r\n                {sizes ? (\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"sidebar-widget-list-left\">\r\n                                <button\r\n                                    onClick={e => {\r\n                                        getSortParams(\"size\", \"\");\r\n                                        setActiveSort(e);\r\n                                    }}\r\n                                >\r\n                                    <span className=\"checkmark\"/> {strings['all_sizes']}{\" \"}\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                        {sizes.map((size, key) => {\r\n                            return (\r\n                                <li key={key}>\r\n                                    <div className=\"sidebar-widget-list-left\">\r\n                                        <button\r\n                                            className=\"text-uppercase\"\r\n                                            onClick={e => {\r\n                                                getSortParams(\"size\", size);\r\n                                                setActiveSort(e);\r\n                                            }}\r\n                                        >\r\n                                            {\" \"}\r\n                                            <span className=\"checkmark\"/>\r\n                                            {size}{\" \"}\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                ) : (\r\n                    strings['no_sizes_found']\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nShopSize.propTypes = {\r\n    getSortParams: PropTypes.func,\r\n    sizes: PropTypes.array\r\n};\r\n\r\nexport default ShopSize;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams,strings }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">{strings['tag']} </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          strings['no_tags_found']\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\nimport ShopSize from \"../../components/product/ShopSize\";\r\nimport ShopTag from \"../../components/product/ShopTag\";\r\nimport {multilanguage} from \"redux-multilanguage\";\r\n\r\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass,strings }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\r\n      {/* shop search */}\r\n      <ShopSearch />\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories\r\n        categories={uniqueCategories}\r\n        getSortParams={getSortParams}\r\n        strings={strings}\r\n      />\r\n\r\n      {/* filter by color */}\r\n      <ShopColor colors={uniqueColors} getSortParams={getSortParams}\r\n                 strings={strings} />\r\n\r\n      {/* filter by size */}\r\n      <ShopSize sizes={uniqueSizes} getSortParams={getSortParams}\r\n                strings={strings} />\r\n\r\n      {/* filter by tag */}\r\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams}\r\n               strings={strings} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string,\r\n    strings:PropTypes.object\r\n};\r\n\r\nexport default multilanguage(ShopSidebar);\r\n"],"sourceRoot":""}