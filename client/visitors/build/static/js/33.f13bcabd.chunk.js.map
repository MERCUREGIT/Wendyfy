{"version":3,"sources":["pages/other/Compare.js","components/product/sub-components/ProductRating.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","cartItems","cartData","compareItems","compareData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","deleteFromCompare","multilanguage","location","strings","pathname","useToasts","name","content","to","process","headerTop","className","length","map","compareItem","key","cartItem","filter","_id","onClick","src","image","alt","affiliateLink","href","rel","target","variation","stock","undefined","quantity","disabled","title","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","currencySymbol","shortDescription","ratingValue","rating","ProductRating","i","push","Breadcrumb","separator","NavLink","finalItem"],"mappings":"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","file":"static/js/33.f13bcabd.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { deleteFromCompare } from \"../../redux/actions/compareActions\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport Rating from \"../../components/product/sub-components/ProductRating\";\r\nimport {routes} from \"../../config/routes\";\r\nimport {multilanguage} from \"redux-multilanguage\";\r\n\r\nconst Compare = ({\r\n  location,\r\n  cartItems,\r\n  compareItems,\r\n  addToCart,\r\n  deleteFromCompare,\r\n  currency,\r\n    strings\r\n}) => {\r\n  const { pathname } = location;\r\n  const { addToast } = useToasts();\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Wendy Fy | Compare</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Compare page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Compare\r\n      </BreadcrumbsItem>\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"compare-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {compareItems && compareItems.length >= 1 ? (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"compare-page-content\">\r\n                    <div className=\"compare-table table-responsive\">\r\n                      <table className=\"table table-bordered mb-0\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th className=\"title-column\">{strings['product_info']}</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              const cartItem = cartItems.filter(\r\n                                item => item._id === compareItem._id\r\n                              )[0];\r\n                              return (\r\n                                <td className=\"product-image-title\" key={key}>\r\n                                  <div className=\"compare-remove\">\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        deleteFromCompare(compareItem, addToast)\r\n                                      }\r\n                                    >\r\n                                      <i className=\"pe-7s-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      compareItem._id\r\n                                    }\r\n                                    className=\"image\"\r\n                                  >\r\n                                    <img\r\n                                      className=\"img-fluid\"\r\n                                      src={\r\n                                        compareItem.image[0]\r\n                                      }\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                  <div className=\"product-title\">\r\n                                    <Link\r\n                                      to={\r\n                                        process.env.PUBLIC_URL +\r\n                                        \"/product/\" +\r\n                                        compareItem._id\r\n                                      }\r\n                                    >\r\n                                      {compareItem.name}\r\n                                    </Link>\r\n                                  </div>\r\n                                  <div className=\"compare-btn\">\r\n                                    {compareItem.affiliateLink ? (\r\n                                      <a\r\n                                        href={compareItem.affiliateLink}\r\n                                        rel=\"noopener noreferrer\"\r\n                                        target=\"_blank\"\r\n                                      >\r\n                                        {\" \"}\r\n                                        {strings['buy_now']}{\" \"}\r\n                                      </a>\r\n                                    ) : compareItem.variation &&\r\n                                      compareItem.variation.length >= 1 ? (\r\n                                      <Link\r\n                                        to={`${process.env.PUBLIC_URL}/product/${compareItem._id}`}\r\n                                      >\r\n                                        {strings['select_option']}\r\n                                      </Link>\r\n                                    ) : compareItem.stock &&\r\n                                      compareItem.stock > 0 ? (\r\n                                      <button\r\n                                        onClick={() =>\r\n                                          addToCart(compareItem, addToast)\r\n                                        }\r\n                                        className={\r\n                                          cartItem !== undefined &&\r\n                                          cartItem.quantity > 0\r\n                                            ? \"active\"\r\n                                            : \"\"\r\n                                        }\r\n                                        disabled={\r\n                                          cartItem !== undefined &&\r\n                                          cartItem.quantity > 0\r\n                                        }\r\n                                        title={\r\n                                          compareItem !== undefined\r\n                                            ? \"Added to cart\"\r\n                                            : \"Add to cart\"\r\n                                        }\r\n                                      >\r\n                                        {cartItem !== undefined &&\r\n                                        cartItem.quantity > 0\r\n                                          ? \"Added\"\r\n                                          : \"Add to cart\"}\r\n                                      </button>\r\n                                    ) : (\r\n                                      <button disabled className=\"active\">\r\n                                        Out of Stock\r\n                                      </button>\r\n                                    )}\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n                          <tr>\r\n                            <th className=\"title-column\">{strings['price']}</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              const discountedPrice = getDiscountPrice(\r\n                                compareItem.price,\r\n                                compareItem.discount\r\n                              );\r\n                              const finalProductPrice = (\r\n                                compareItem.price * currency.currencyRate\r\n                              ).toFixed(2);\r\n                              const finalDiscountedPrice = (\r\n                                discountedPrice * currency.currencyRate\r\n                              ).toFixed(2);\r\n                              return (\r\n                                <td className=\"product-price\" key={key}>\r\n                                  {discountedPrice !== null ? (\r\n                                    <Fragment>\r\n                                      <span className=\"amount old\">\r\n                                        {currency.currencySymbol +\r\n                                          finalProductPrice}\r\n                                      </span>\r\n                                      <span className=\"amount\">\r\n                                        {currency.currencySymbol +\r\n                                          finalDiscountedPrice}\r\n                                      </span>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <span className=\"amount\">\r\n                                      {currency.currencySymbol +\r\n                                        finalProductPrice}\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <th className=\"title-column\">{strings['description']}</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              return (\r\n                                <td className=\"product-desc\" key={key}>\r\n                                  <p>\r\n                                    {compareItem.shortDescription\r\n                                      ? compareItem.shortDescription\r\n                                      : \"N/A\"}\r\n                                  </p>\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <th className=\"title-column\">{strings['rating']}</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              return (\r\n                                <td className=\"product-rating\" key={key}>\r\n                                  <Rating ratingValue={compareItem.rating} />\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-shuffle\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      No items found in compare <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\r\n                        Add Items\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCompare.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteFromCompare: PropTypes.func,\r\n  strings:PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    compareItems: state.compareData,\r\n    currency: state.currencyData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n\r\n    deleteFromCompare: (item, addToast) => {\r\n      dispatch(deleteFromCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Compare));\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ProductRating = ({ ratingValue }) => {\r\n  let rating = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\r\n  }\r\n  if (ratingValue && ratingValue > 0) {\r\n    for (let i = 0; i <= ratingValue - 1; i++) {\r\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\r\n    }\r\n  }\r\n  return <Fragment>{rating}</Fragment>;\r\n};\r\n\r\nProductRating.propTypes = {\r\n  ratingValue: PropTypes.number\r\n};\r\n\r\nexport default ProductRating;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}