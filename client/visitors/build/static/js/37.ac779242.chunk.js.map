{"version":3,"sources":["pages/other/Checkout.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","user","authentication","cartItems","cartData","currency","currencyData","dispatch","deleteAllFromCart","addToast","multilanguage","location","strings","toast","error","pathname","cartTotalPrice","history","useHistory","useState","username","name","handleName","country","handleCountry","city","handleCity","paymentDetails","isLoading","setIsLoading","order","setOrder","CinetPay","window","handlePayment","a","_id","setSignatureData","amount","parseInt","document","getElementById","value","trans_id","designation","custom","cpm_phone_prefixe","getSignature","payload","productOrders","id","userid","currencySymbol","toFixed","axiosConfig","headers","axios","post","routes","server","JSON","stringify","then","r","data","catch","e","push","finally","useEffect","setConfig","apikey","site_id","notify_url","notify_url_cinetpay","on","code","message","console","log","paymentInfo","lastTime","cpm_result","success","cpm_error_message","content","to","process","headerTop","className","length","type","onChange","target","Countries","map","key","cartItem","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","finalDiscountedPrice","quantity","active","spinner","text","onClick","disabled","Breadcrumb","separator","item","NavLink","finalItem"],"mappings":"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","file":"static/js/37.ac779242.chunk.js","sourcesContent":["import axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport React, {Fragment, useState, useEffect} from \"react\";\nimport {Link,useHistory} from \"react-router-dom\";\nimport MetaTags from \"react-meta-tags\";\nimport {connect} from \"react-redux\";\nimport {BreadcrumbsItem} from \"react-breadcrumbs-dynamic\";\nimport {getDiscountPrice} from \"../../helpers/product\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport Countries from '../../data/countries/country-by-name.json';\nimport {routes} from '../../config/routes'\nimport {multilanguage} from \"redux-multilanguage\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {deleteAllFromCart} from \"../../redux/actions/cartActions\";\n// import {useToasts} from \"react-toast-notifications\";\nimport { ToastContainer, toast } from 'react-toastify';\nconst Checkout = ({location, cartItems, currency, user, strings,deleteAllFromCart}) => {\n    let addToast=toast.error\n    // const { addToast } = useToasts();\n    const {pathname} = location;\n    let cartTotalPrice = 0;\n    const history = useHistory();\n    const [name, handleName] = useState(user.username !== \"\" ? user.username : \"\");\n    const [country, handleCountry] = useState('');\n    const [city, handleCity] = useState('');\n    const paymentDetails = {};\n    const [isLoading, setIsLoading] = useState(false);\n    const [order, setOrder] = useState({});\n    const error = false;\n    \n    let CinetPay = window.CinetPay;\n\n    const handlePayment = async () => {\n        if (isLoading) {\n            return;\n        }\n        if(order._id){\n            CinetPay.setSignatureData({\n                amount: parseInt(document.getElementById('amount').value),\n                trans_id: document.getElementById('trans_id').value,\n                currency: document.getElementById('currency').value,\n                designation: document.getElementById('designation').value,\n                custom: document.getElementById('cpm_custom').value,\n                // cel_phone_num: '696076817',\n                cpm_phone_prefixe:'237'\n            });\n            CinetPay.getSignature();\n            return;\n        }\n        setIsLoading(true)\n        let payload =  {\n            name: name,\n            country: country,\n            city: city,\n            paymentDetails: paymentDetails,\n            productOrders: cartItems,\n            id: user.userid,\n            currency: currency.currencySymbol,\n            amount: cartTotalPrice.toFixed(2)\n        };\n        let axiosConfig = {\n            headers: {\n                'Content-Type' : 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n          \n            }\n          };\n\n        axios.post(`${routes.server}/order/`, JSON.stringify(payload), axiosConfig).then(r => {\n            setOrder(r.data)\n            CinetPay.setSignatureData({\n                amount: parseInt(document.getElementById('amount').value),\n                trans_id: document.getElementById('trans_id').value,\n                currency: document.getElementById('currency').value,\n                designation: document.getElementById('designation').value,\n                custom: document.getElementById('cpm_custom').value,\n                // cel_phone_num: '697835780',\n                cpm_phone_prefixe:'237'\n            });\n            CinetPay.getSignature();\n        }).catch(e => {\n            setIsLoading(false)\n            // deleteAllFromCart(false)\n            addToast(strings['subs_connection_error'])\n            history.push(\"/checkout\")\n        }).finally(e => {\n        });\n    }\n\n    useEffect(() => {\n        // addToast(\"hhh\")\n        CinetPay.setConfig({\n            apikey: '8936433616017f33cc7a2b9.78720038',\n            site_id: 302789,\n            notify_url: routes.notify_url_cinetpay,\n            // return_url:\"http://wendyfy-listener.novobyte.org/cinetpay-php-sdk-master/exemple/return\",\n            // cancel:\"http://wendyfy-listener.novobyte.org/cinetpay-php-sdk-master/exemple/cancel\",\n        });\n\n        CinetPay.on('error', function (e) {\n            setIsLoading(false)\n            // deleteAllFromCart(false)\n            // history.push(\"/my-account\")\n            addToast(strings['subs_connection_error'] + \"Errore code :\"+ e.code +\"Message :\" + e.message )\n            // addToast(strings['subs_connection_error'] + e.code + ',' + e.message)\n        });\n        CinetPay.on('paymentPending', function (e) {\n            \n            addToast(strings['subs_connection_error'] + 'code:' + e.code + 'Message::' + e.message )\n            console.log(\"payment pending\")\n            \n        });\n        CinetPay.on('signatureCreated', function () {\n          \n            console.log(\"payment pending\")\n        })\n        CinetPay.on('paymentSuccessfull', function (paymentInfo) {\n            if(typeof paymentInfo.lastTime != 'undefined'){\n                // result_div.innerHTML = '';\n                if(paymentInfo.cpm_result === '00'){\n                    toast.success(strings['payment_completed'])\n                    deleteAllFromCart(false)\n                    history.push(\"/my-account\")\n                }else{\n                    deleteAllFromCart(false)\n                    history.push(\"/my-account\")\n                    addToast(strings['subs_connection_error'] + paymentInfo.cpm_error_message)\n                }\n            }\n        });\n\n\n        //{\"order\":{\"deliveryStatus\":false,\"date\":\"2021-06-20T12:46:59.490Z\",\"_id\":\"60cf38e06fbd8c528492991f\",\"products\":[],\"user\":{\"userRole\":\"normalUser\",\"_id\":\"60b76328d6ee3a0774004316\",\"username\":\"tkc\",\"email\":\"tclarencek@gmail.com\",\"telephone\":\"696076817\",\"password\":\"$2b$10$S33ccOErFjhWHKFoPTofIe4skGO8e.TIEInCmaBIsp39tx/aUSn4u\",\"__v\":0,\"role\":\"admin\"},\"paymentStatus\":null,\"isPayed\":false,\"__v\":0}}\n    })\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <MetaTags>\n                <title>Wendy Fy | Checkout</title>\n                <meta\n                    name=\"description\"\n                    content=\"Checkout page of flone react minimalist eCommerce template.\"\n                />\n            </MetaTags>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>{strings['home']}</BreadcrumbsItem>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\n                {strings['payment']}\n            </BreadcrumbsItem>\n            <LayoutOne headerTop=\"visible\">\n                {/* breadcrumb */}\n                <Breadcrumb/>\n                <div className=\"checkout-area pt-95 pb-100\">\n                    <div className=\"container\">\n                        {cartItems && cartItems.length >= 1 ? (\n                            <div className=\"row\">\n                                <div className=\"col-lg-7\">\n                                    <div className=\"billing-info-wrap\">\n                                        <h3>{strings['payment_details']}</h3>\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-12 col-md-12\">\n                                                <div className=\"billing-info mb-20\">\n                                                    <label>{strings['name_and_surname']}</label>\n                                                    <input type=\"text\" value={name}\n                                                           onChange={e => handleName(e.target.value)}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-12\">\n                                                <div className=\"billing-select mb-20\">\n                                                    <label>{strings['country']}</label>\n                                                    <select onChange={e => handleCountry(e.target.value)} name=\"pays\">\n                                                        <option>{strings['choose_a_country']}</option>\n                                                        {Countries.map(country => <option key={country.country}\n                                                                                          value={country.country}>{country.country}</option>)}\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-12\">\n                                                <div className=\"billing-info mb-20\">\n                                                    <label>{strings['town_and_quarter']}</label>\n                                                    <input type=\"text\" onChange={e => handleCity(e.target.value)}\n                                                           value={city}/>\n                                                </div>\n                                            </div>\n                                            {/*    <div className=\"col-lg-12\">\n                        <div className=\"billing-info\">\n                          <label>{strings['payment_methods']}</label>\n                        </div>\n                        <PaymentMode strings={strings} handlePaymentDetails={handlePaymentDetails} paymentDetails={paymentDetails} />\n                      </div>*/}\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-5\">\n                                    <div className=\"your-order-area\">\n                                        <h3>{strings['your_buys']}</h3>\n                                        <div className=\"your-order-wrap gray-bg-4\">\n                                            <div className=\"your-order-product-info\">\n                                                <div className=\"your-order-top\">\n                                                    <ul>\n                                                        <li>{strings['product']}</li>\n                                                        <li>{strings['total']}</li>\n                                                    </ul>\n                                                </div>\n                                                <div className=\"your-order-middle\">\n                                                    <ul>\n                                                        {cartItems.map((cartItem, key) => {\n                                                            const discountedPrice = getDiscountPrice(\n                                                                cartItem.price,\n                                                                cartItem.discount\n                                                            );\n                                                            const finalProductPrice = (\n                                                                cartItem.price * currency.currencyRate\n                                                            ).toFixed(2);\n                                                            const finalDiscountedPrice = (\n                                                                discountedPrice * currency.currencyRate\n                                                            ).toFixed(2);\n\n                                                            discountedPrice != null\n                                                                ? (cartTotalPrice +=\n                                                                finalDiscountedPrice * cartItem.quantity)\n                                                                : (cartTotalPrice +=\n                                                                finalProductPrice * cartItem.quantity);\n                                                            return (\n                                                                <li key={key}>\n                                  <span className=\"order-middle-left\">\n                                    {cartItem.name} X {cartItem.quantity}\n                                  </span>{\" \"}\n                                                                    <span className=\"order-price\">\n                                    {discountedPrice !== null\n                                        ? currency.currencySymbol +\n                                        (\n                                            finalDiscountedPrice *\n                                            cartItem.quantity\n                                        ).toFixed(2)\n                                        : currency.currencySymbol +\n                                        (\n                                            finalProductPrice * cartItem.quantity\n                                        ).toFixed(2)}\n                                  </span>\n                                                                </li>\n                                                            );\n                                                        })}\n                                                    </ul>\n                                                </div>\n\n                                                <div className=\"your-order-total\">\n                                                    <ul>\n                                                        <li className=\"order-total\">{strings['total']}</li>\n                                                        <li>\n                                                            {currency.currencySymbol +\n                                                            cartTotalPrice.toFixed(2)}\n                                                        </li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                            <div className=\"payment-method\"></div>\n                                        </div>\n                                        {error &&\n                                        <center><p style={{color: \"red\"}}>{error}</p>\n                                        </center>}\n                                        <div className=\"place-order mt-25\">\n                                            <LoadingOverlay\n                                                active={isLoading}\n                                                spinner\n                                                text='Loading your content...'\n                                            >\n                                            </LoadingOverlay>\n                                            <button onClick={handlePayment} disabled={isLoading}\n                                                    className=\"btn-hover\">{strings['effectuate_payment']}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <div className=\"item-empty-area text-center\">\n                                        <div className=\"item-empty-area__icon mb-30\">\n                                            <i className=\"pe-7s-cash\"></i>\n                                        </div>\n                                        <div className=\"item-empty-area__text\">\n                                            {strings['no_items_found_to_cart']} <br/>{\" \"}\n                                            <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\n                                                {strings['shop_now']}\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </LayoutOne>\n            {/*<form>*/}\n            {order._id && <div id=\"info_paiement\">\n                <input type=\"hidden\" id=\"amount\" value={cartTotalPrice.toFixed(2)}/>\n\n                <input type=\"hidden\" id=\"currency\" value=\"XAF\"/>\n\n                <input type=\"hidden\" id=\"trans_id\" value={order._id}/>\n\n                <input type=\"hidden\" id=\"cpm_custom\" value=\"\"/>\n\n                <input type=\"hidden\" id=\"designation\" value={strings['payment_for_order'] + \" - #\" + order._id}/>\n            </div>}\n            {/*</form>*/}\n\n        </Fragment>\n    );\n};\n\nCheckout.propTypes = {\n    cartItems: PropTypes.array,\n    currency: PropTypes.object,\n    location: PropTypes.object,\n    strings: PropTypes.object,\n    deleteAllFromCart:PropTypes.func\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.authentication,\n        cartItems: state.cartData,\n        currency: state.currencyData\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteAllFromCart: addToast => {\n            dispatch(deleteAllFromCart(addToast));\n        }\n    };\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(multilanguage(Checkout));\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}