{"version":3,"sources":["pages/other/Cart.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","cartItems","cartData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","decreaseQuantity","deleteFromCart","deleteAllFromCart","multilanguage","location","strings","useState","useToasts","pathname","cartTotalPrice","name","content","to","process","headerTop","className","length","map","cartItem","key","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","quantity","id","src","image","alt","selectedProductColor","selectedProductSize","currencySymbol","onClick","type","value","readOnly","disabled","undefined","cartItemStock","Breadcrumb","separator","NavLink","finalItem"],"mappings":"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","file":"static/js/36.a9a79547.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport MetaTags from \"react-meta-tags\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { connect } from \"react-redux\";\nimport { getDiscountPrice } from \"../../helpers/product\";\n// import {routes} from \"../../config/routes\";\nimport {\n  addToCart,\n  decreaseQuantity,\n  deleteFromCart,\n  cartItemStock,\n  deleteAllFromCart\n} from \"../../redux/actions/cartActions\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport {multilanguage} from \"redux-multilanguage\";\n\nconst Cart = ({\n  location,\n  cartItems,\n  currency,\n  decreaseQuantity,\n  addToCart,\n  deleteFromCart,\n  deleteAllFromCart,\n    strings\n}) => {\n  const [quantityCount] = useState(1);\n  const { addToast } = useToasts();\n  const { pathname } = location;\n  let cartTotalPrice = 0;\n\n  return (\n    <Fragment>\n      <MetaTags>\n        <title>Wendy Fy | Cart</title>\n        <meta\n          name=\"description\"\n          content=\"Cart page of flone react minimalist eCommerce template.\"\n        />\n      </MetaTags>\n\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\n        Cart\n      </BreadcrumbsItem>\n\n      <LayoutOne headerTop=\"visible\">\n        {/* breadcrumb */}\n        <Breadcrumb />\n        <div className=\"cart-main-area pt-90 pb-100\">\n          <div className=\"container\">\n            {cartItems && cartItems.length >= 1 ? (\n              <Fragment>\n                <h3 className=\"cart-page-title\">{strings['your_cart_items']}</h3>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"table-content table-responsive cart-table-content\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th>{strings['image']}</th>\n                            <th>{strings['product_name']}</th>\n                            <th>{strings['unit_price']}</th>\n                            <th>{strings['qty']}</th>\n                            <th>{strings['subtotal']}</th>\n                            <th>{strings['action']}</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {cartItems.map((cartItem, key) => {\n                            const discountedPrice = getDiscountPrice(\n                              cartItem.price,\n                              cartItem.discount\n                            );\n                            const finalProductPrice = (\n                              cartItem.price * currency.currencyRate\n                            ).toFixed(2);\n                            const finalDiscountedPrice = (\n                              discountedPrice * currency.currencyRate\n                            ).toFixed(2);\n\n                            discountedPrice != null\n                              ? (cartTotalPrice +=\n                                  finalDiscountedPrice * cartItem.quantity)\n                              : (cartTotalPrice +=\n                                  finalProductPrice * cartItem.quantity);\n                            return (\n                              <tr key={key}>\n                                <td className=\"product-thumbnail\">\n                                  <Link\n                                    to={\n                                      process.env.PUBLIC_URL +\n                                      \"/product/\" +\n                                      cartItem.id\n                                    }\n                                  >\n                                    <img\n                                      className=\"img-fluid\"\n                                      src={\n                                        cartItem.image[0]\n                                      }\n                                      alt=\"\"\n                                    />\n                                  </Link>\n                                </td>\n\n                                <td className=\"product-name\">\n                                  <Link\n                                    to={\n                                      process.env.PUBLIC_URL +\n                                      \"/product/\" +\n                                      cartItem.id\n                                    }\n                                  >\n                                    {cartItem.name}\n                                  </Link>\n                                  {cartItem.selectedProductColor &&\n                                  cartItem.selectedProductSize ? (\n                                    <div className=\"cart-item-variation\">\n                                      <span>\n                                        Color: {cartItem.selectedProductColor}\n                                      </span>\n                                      <span>\n                                        Size: {cartItem.selectedProductSize}\n                                      </span>\n                                    </div>\n                                  ) : (\n                                    \"\"\n                                  )}\n                                </td>\n\n                                <td className=\"product-price-cart\">\n                                  {discountedPrice !== null ? (\n                                    <Fragment>\n                                      <span className=\"amount old\">\n                                        {currency.currencySymbol +\n                                          finalProductPrice}\n                                      </span>\n                                      <span className=\"amount\">\n                                        {currency.currencySymbol +\n                                          finalDiscountedPrice}\n                                      </span>\n                                    </Fragment>\n                                  ) : (\n                                    <span className=\"amount\">\n                                      {currency.currencySymbol +\n                                        finalProductPrice}\n                                    </span>\n                                  )}\n                                </td>\n\n                                <td className=\"product-quantity\">\n                                  <div className=\"cart-plus-minus\">\n                                    <button\n                                      className=\"dec qtybutton\"\n                                      onClick={() =>\n                                        decreaseQuantity(cartItem, addToast)\n                                      }\n                                    >\n                                      -\n                                    </button>\n                                    <input\n                                      className=\"cart-plus-minus-box\"\n                                      type=\"text\"\n                                      value={cartItem.quantity}\n                                      readOnly\n                                    />\n                                    <button\n                                      className=\"inc qtybutton\"\n                                      onClick={() =>\n                                        addToCart(\n                                          cartItem,\n                                          addToast,\n                                          quantityCount\n                                        )\n                                      }\n                                      disabled={\n                                        cartItem !== undefined &&\n                                        cartItem.quantity &&\n                                        cartItem.quantity >=\n                                          cartItemStock(\n                                            cartItem,\n                                            cartItem.selectedProductColor,\n                                            cartItem.selectedProductSize\n                                          )\n                                      }\n                                    >\n                                      +\n                                    </button>\n                                  </div>\n                                </td>\n                                <td className=\"product-subtotal\">\n                                  {discountedPrice !== null\n                                    ? currency.currencySymbol +\n                                      (\n                                        finalDiscountedPrice * cartItem.quantity\n                                      ).toFixed(2)\n                                    : currency.currencySymbol +\n                                      (\n                                        finalProductPrice * cartItem.quantity\n                                      ).toFixed(2)}\n                                </td>\n\n                                <td className=\"product-remove\">\n                                  <button\n                                    onClick={() =>\n                                      deleteFromCart(cartItem, addToast)\n                                    }\n                                  >\n                                    <i className=\"fa fa-times\"></i>\n                                  </button>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"cart-shiping-update-wrapper\">\n                      <div className=\"cart-shiping-update\">\n                        <Link\n                          to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}\n                        >\n                          {strings['continue_shopping']}\n                        </Link>\n                      </div>\n                      <div className=\"cart-clear\">\n                        <button onClick={() => deleteAllFromCart(addToast)}>\n                          {strings['clear_shopping_cart']}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  {/* <div className=\"col-lg-4 col-md-6\">\n                    <div className=\"cart-tax\">\n                      <div className=\"title-wrap\">\n                        <h4 className=\"cart-bottom-title section-bg-gray\">\n                          Estimate Shipping And Tax\n                        </h4>\n                      </div>\n                      <div className=\"tax-wrapper\">\n                        <p>\n                          Enter your destination to get a shipping estimate.\n                        </p>\n                        <div className=\"tax-select-wrapper\">\n                          <div className=\"tax-select\">\n                            <label>* Country</label>\n                            <select className=\"email s-email s-wid\">\n                              <option>Bangladesh</option>\n                              <option>Albania</option>\n                              <option>Åland Islands</option>\n                              <option>Afghanistan</option>\n                              <option>Belgium</option>\n                            </select>\n                          </div>\n                          <div className=\"tax-select\">\n                            <label>* Region / State</label>\n                            <select className=\"email s-email s-wid\">\n                              <option>Bangladesh</option>\n                              <option>Albania</option>\n                              <option>Åland Islands</option>\n                              <option>Afghanistan</option>\n                              <option>Belgium</option>\n                            </select>\n                          </div>\n                          <div className=\"tax-select\">\n                            <label>* Zip/Postal Code</label>\n                            <input type=\"text\" />\n                          </div>\n                          <button className=\"cart-btn-2\" type=\"submit\">\n                            Get A Quote\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-4 col-md-6\"> \n                    <div className=\"discount-code-wrapper\">\n                      <div className=\"title-wrap\">\n                        <h4 className=\"cart-bottom-title section-bg-gray\">\n                          Use Coupon Code\n                        </h4>\n                      </div>\n                      <div className=\"discount-code\">\n                        <p>Enter your coupon code if you have one.</p>\n                        <form>\n                          <input type=\"text\" required name=\"name\" />\n                          <button className=\"cart-btn-2\" type=\"submit\">\n                            Apply Coupon\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                        </div>*/}\n\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"grand-totall\">\n                      <div className=\"title-wrap\">\n                        <h4 className=\"cart-bottom-title section-bg-gary-cart\">\n                          {strings['cart_total']}\n                        </h4>\n                      </div>\n                      <h5>\n                        {strings['total_products']} {\" \"}\n                        <span>\n                          {currency.currencySymbol + cartTotalPrice.toFixed(2)}\n                        </span>\n                      </h5>\n\n                      <h4 className=\"grand-totall-title\">\n                        {strings['grand_total']} {\" \"}\n                        <span>\n                          {currency.currencySymbol + cartTotalPrice.toFixed(2)}\n                        </span>\n                      </h4>\n                      <Link to={process.env.PUBLIC_URL + \"/checkout\"}>\n                        {strings['proceed_to_checkout']}\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            ) : (\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"item-empty-area text-center\">\n                    <div className=\"item-empty-area__icon mb-30\">\n                      <i className=\"pe-7s-cart\"></i>\n                    </div>\n                    <div className=\"item-empty-area__text\">\n                      {strings['no_items_found_to_cart']} <br />{\" \"}\n                      <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\n                        {strings['shop_now']}\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </LayoutOne>\n    </Fragment>\n  );\n};\n\nCart.propTypes = {\n  addToCart: PropTypes.func,\n  cartItems: PropTypes.array,\n  currency: PropTypes.object,\n  decreaseQuantity: PropTypes.func,\n  location: PropTypes.object,\n  deleteAllFromCart: PropTypes.func,\n  deleteFromCart: PropTypes.func,\n  strings:PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    currency: state.currencyData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount) => {\n      dispatch(addToCart(item, addToast, quantityCount));\n    },\n    decreaseQuantity: (item, addToast) => {\n      dispatch(decreaseQuantity(item, addToast));\n    },\n    deleteFromCart: (item, addToast) => {\n      dispatch(deleteFromCart(item, addToast));\n    },\n    deleteAllFromCart: addToast => {\n      dispatch(deleteAllFromCart(addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Cart));\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}