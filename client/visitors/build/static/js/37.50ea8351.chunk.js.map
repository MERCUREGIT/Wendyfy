{"version":3,"sources":["pages/other/Checkout.js","wrappers/breadcrumb/Breadcrumb.js"],"names":["connect","state","user","authentication","cartItems","cartData","currency","currencyData","dispatch","deleteAllFromCart","addToast","multilanguage","location","strings","toast","error","pathname","cartTotalPrice","history","useHistory","useState","username","name","handleName","country","handleCountry","city","handleCity","paymentDetails","isLoading","setIsLoading","order","setOrder","CinetPay","window","handlePayment","a","_id","setSignatureData","amount","parseInt","document","getElementById","value","trans_id","designation","custom","cpm_phone_prefixe","getSignature","axios","post","routes","server","productOrders","id","userid","currencySymbol","toFixed","then","r","data","catch","e","push","finally","useEffect","setConfig","apikey","site_id","notify_url","notify_url_cinetpay","on","code","message","paymentInfo","lastTime","cpm_result","success","cpm_error_message","content","to","process","headerTop","className","length","type","onChange","target","Countries","map","key","cartItem","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","finalDiscountedPrice","quantity","style","color","active","spinner","text","onClick","disabled","Breadcrumb","separator","item","NavLink","finalItem"],"mappings":"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","file":"static/js/37.50ea8351.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {Fragment, useState, useEffect} from \"react\";\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport {connect} from \"react-redux\";\r\nimport {BreadcrumbsItem} from \"react-breadcrumbs-dynamic\";\r\nimport {getDiscountPrice} from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport Countries from '../../data/countries/country-by-name.json';\r\nimport {routes} from '../../config/routes'\r\nimport {multilanguage} from \"redux-multilanguage\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport {deleteAllFromCart} from \"../../redux/actions/cartActions\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst Checkout = ({location, cartItems, currency, user, strings,deleteAllFromCart}) => {\r\n    let addToast=toast.error\r\n    // const { addToast } = useToasts();\r\n    const {pathname} = location;\r\n    let cartTotalPrice = 0;\r\n    const history = useHistory();\r\n    const [name, handleName] = useState(user.username !== \"\" ? user.username : \"\");\r\n    const [country, handleCountry] = useState('');\r\n    const [city, handleCity] = useState('');\r\n    const [paymentDetails, handlePaymentDetails] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [order, setOrder] = useState({});\r\n    const [error, setError] = useState(false)\r\n    let CinetPay = window.CinetPay;\r\n\r\n    const handlePayment = async () => {\r\n        if (isLoading) {\r\n            return;\r\n        }\r\n        if(order._id){\r\n            CinetPay.setSignatureData({\r\n                amount: parseInt(document.getElementById('amount').value),\r\n                trans_id: document.getElementById('trans_id').value,\r\n                currency: document.getElementById('currency').value,\r\n                designation: document.getElementById('designation').value,\r\n                custom: document.getElementById('cpm_custom').value,\r\n                // cel_phone_num: '696076817',\r\n                cpm_phone_prefixe:'237'\r\n            });\r\n            CinetPay.getSignature();\r\n            return;\r\n        }\r\n        setIsLoading(true)\r\n        let result = await axios.post(`${routes.server}/order/`, {\r\n            name: name,\r\n            country: country,\r\n            city: city,\r\n            paymentDetails: paymentDetails,\r\n            productOrders: cartItems,\r\n            id: user.userid,\r\n            currency: currency.currencySymbol,\r\n            amount: cartTotalPrice.toFixed(2)\r\n        }).then(r => {\r\n            setOrder(r.data)\r\n            CinetPay.setSignatureData({\r\n                amount: parseInt(document.getElementById('amount').value),\r\n                trans_id: document.getElementById('trans_id').value,\r\n                currency: document.getElementById('currency').value,\r\n                designation: document.getElementById('designation').value,\r\n                custom: document.getElementById('cpm_custom').value,\r\n                // cel_phone_num: '696076817',\r\n                cpm_phone_prefixe:'237'\r\n            });\r\n            CinetPay.getSignature();\r\n        }).catch(e => {\r\n            setIsLoading(false)\r\n            deleteAllFromCart(false)\r\n            history.push(\"/my-account\")\r\n            addToast(strings['subs_connection_error'])\r\n        }).finally(e => {\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // addToast(\"hhh\")\r\n        CinetPay.setConfig({\r\n            apikey: '8936433616017f33cc7a2b9.78720038',\r\n            site_id: 302789,\r\n            notify_url: routes.notify_url_cinetpay,\r\n            // return_url:\"http://wendyfy-listener.novobyte.org/cinetpay-php-sdk-master/exemple/return\",\r\n            // cancel:\"http://wendyfy-listener.novobyte.org/cinetpay-php-sdk-master/exemple/cancel\",\r\n        });\r\n\r\n        CinetPay.on('error', function (e) {\r\n            setIsLoading(false)\r\n            deleteAllFromCart(false)\r\n            history.push(\"/my-account\")\r\n            addToast(strings['subs_connection_error'] + e.code + ',' + e.message)\r\n        });\r\n        CinetPay.on('paymentPending', function (e) {\r\n\r\n        });\r\n        CinetPay.on('signatureCreated', function () {})\r\n        CinetPay.on('paymentSuccessfull', function (paymentInfo) {\r\n            if(typeof paymentInfo.lastTime != 'undefined'){\r\n                // result_div.innerHTML = '';\r\n                if(paymentInfo.cpm_result == '00'){\r\n                    toast.success(strings['payment_completed'])\r\n                    deleteAllFromCart(false)\r\n                    history.push(\"/my-account\")\r\n                }else{\r\n                    deleteAllFromCart(false)\r\n                    history.push(\"/my-account\")\r\n                    addToast(strings['subs_connection_error'] + paymentInfo.cpm_error_message)\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        //{\"order\":{\"deliveryStatus\":false,\"date\":\"2021-06-20T12:46:59.490Z\",\"_id\":\"60cf38e06fbd8c528492991f\",\"products\":[],\"user\":{\"userRole\":\"normalUser\",\"_id\":\"60b76328d6ee3a0774004316\",\"username\":\"tkc\",\"email\":\"tclarencek@gmail.com\",\"telephone\":\"696076817\",\"password\":\"$2b$10$S33ccOErFjhWHKFoPTofIe4skGO8e.TIEInCmaBIsp39tx/aUSn4u\",\"__v\":0,\"role\":\"admin\"},\"paymentStatus\":null,\"isPayed\":false,\"__v\":0}}\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <MetaTags>\r\n                <title>Wendy Fy | Checkout</title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Checkout page of flone react minimalist eCommerce template.\"\r\n                />\r\n            </MetaTags>\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>{strings['home']}</BreadcrumbsItem>\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n                {strings['payment']}\r\n            </BreadcrumbsItem>\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb/>\r\n                <div className=\"checkout-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        {cartItems && cartItems.length >= 1 ? (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-7\">\r\n                                    <div className=\"billing-info-wrap\">\r\n                                        <h3>{strings['payment_details']}</h3>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12 col-md-12\">\r\n                                                <div className=\"billing-info mb-20\">\r\n                                                    <label>{strings['name_and_surname']}</label>\r\n                                                    <input type=\"text\" value={name}\r\n                                                           onChange={e => handleName(e.target.value)}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"billing-select mb-20\">\r\n                                                    <label>{strings['country']}</label>\r\n                                                    <select onChange={e => handleCountry(e.target.value)} name=\"pays\">\r\n                                                        <option>{strings['choose_a_country']}</option>\r\n                                                        {Countries.map(country => <option key={country.country}\r\n                                                                                          value={country.country}>{country.country}</option>)}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"billing-info mb-20\">\r\n                                                    <label>{strings['town_and_quarter']}</label>\r\n                                                    <input type=\"text\" onChange={e => handleCity(e.target.value)}\r\n                                                           value={city}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/*    <div className=\"col-lg-12\">\r\n                        <div className=\"billing-info\">\r\n                          <label>{strings['payment_methods']}</label>\r\n                        </div>\r\n                        <PaymentMode strings={strings} handlePaymentDetails={handlePaymentDetails} paymentDetails={paymentDetails} />\r\n                      </div>*/}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-5\">\r\n                                    <div className=\"your-order-area\">\r\n                                        <h3>{strings['your_buys']}</h3>\r\n                                        <div className=\"your-order-wrap gray-bg-4\">\r\n                                            <div className=\"your-order-product-info\">\r\n                                                <div className=\"your-order-top\">\r\n                                                    <ul>\r\n                                                        <li>{strings['product']}</li>\r\n                                                        <li>{strings['total']}</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"your-order-middle\">\r\n                                                    <ul>\r\n                                                        {cartItems.map((cartItem, key) => {\r\n                                                            const discountedPrice = getDiscountPrice(\r\n                                                                cartItem.price,\r\n                                                                cartItem.discount\r\n                                                            );\r\n                                                            const finalProductPrice = (\r\n                                                                cartItem.price * currency.currencyRate\r\n                                                            ).toFixed(2);\r\n                                                            const finalDiscountedPrice = (\r\n                                                                discountedPrice * currency.currencyRate\r\n                                                            ).toFixed(2);\r\n\r\n                                                            discountedPrice != null\r\n                                                                ? (cartTotalPrice +=\r\n                                                                finalDiscountedPrice * cartItem.quantity)\r\n                                                                : (cartTotalPrice +=\r\n                                                                finalProductPrice * cartItem.quantity);\r\n                                                            return (\r\n                                                                <li key={key}>\r\n                                  <span className=\"order-middle-left\">\r\n                                    {cartItem.name} X {cartItem.quantity}\r\n                                  </span>{\" \"}\r\n                                                                    <span className=\"order-price\">\r\n                                    {discountedPrice !== null\r\n                                        ? currency.currencySymbol +\r\n                                        (\r\n                                            finalDiscountedPrice *\r\n                                            cartItem.quantity\r\n                                        ).toFixed(2)\r\n                                        : currency.currencySymbol +\r\n                                        (\r\n                                            finalProductPrice * cartItem.quantity\r\n                                        ).toFixed(2)}\r\n                                  </span>\r\n                                                                </li>\r\n                                                            );\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </div>\r\n\r\n                                                <div className=\"your-order-total\">\r\n                                                    <ul>\r\n                                                        <li className=\"order-total\">{strings['total']}</li>\r\n                                                        <li>\r\n                                                            {currency.currencySymbol +\r\n                                                            cartTotalPrice.toFixed(2)}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"payment-method\"></div>\r\n                                        </div>\r\n                                        {error &&\r\n                                        <center><p style={{color: \"red\"}}>{error}</p>\r\n                                        </center>}\r\n                                        <div className=\"place-order mt-25\">\r\n                                            <LoadingOverlay\r\n                                                active={isLoading}\r\n                                                spinner\r\n                                                text='Loading your content...'\r\n                                            >\r\n                                            </LoadingOverlay>\r\n                                            <button onClick={handlePayment} disabled={isLoading}\r\n                                                    className=\"btn-hover\">{strings['effectuate_payment']}</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"item-empty-area text-center\">\r\n                                        <div className=\"item-empty-area__icon mb-30\">\r\n                                            <i className=\"pe-7s-cash\"></i>\r\n                                        </div>\r\n                                        <div className=\"item-empty-area__text\">\r\n                                            {strings['no_items_found_to_cart']} <br/>{\" \"}\r\n                                            <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\r\n                                                {strings['shop_now']}\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n            {/*<form>*/}\r\n            {order._id && <div id=\"info_paiement\">\r\n                <input type=\"hidden\" id=\"amount\" value={cartTotalPrice.toFixed(2)}/>\r\n\r\n                <input type=\"hidden\" id=\"currency\" value=\"XAF\"/>\r\n\r\n                <input type=\"hidden\" id=\"trans_id\" value={order._id}/>\r\n\r\n                <input type=\"hidden\" id=\"cpm_custom\" value=\"\"/>\r\n\r\n                <input type=\"hidden\" id=\"designation\" value={strings['payment_for_order'] + \" - #\" + order._id}/>\r\n            </div>}\r\n            {/*</form>*/}\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nCheckout.propTypes = {\r\n    cartItems: PropTypes.array,\r\n    currency: PropTypes.object,\r\n    location: PropTypes.object,\r\n    strings: PropTypes.object,\r\n    deleteAllFromCart:PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.authentication,\r\n        cartItems: state.cartData,\r\n        currency: state.currencyData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteAllFromCart: addToast => {\r\n            dispatch(deleteAllFromCart(addToast));\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(multilanguage(Checkout));\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"],"sourceRoot":""}